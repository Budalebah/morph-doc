"use strict";(self.webpackChunkmorph_doc=self.webpackChunkmorph_doc||[]).push([[6745],{9613:(e,t,a)=>{a.d(t,{Zo:()=>o,kt:()=>g});var n=a(9496);function r(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function i(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function s(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?i(Object(a),!0).forEach((function(t){r(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):i(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function l(e,t){if(null==e)return{};var a,n,r=function(e,t){if(null==e)return{};var a,n,r={},i=Object.keys(e);for(n=0;n<i.length;n++)a=i[n],t.indexOf(a)>=0||(r[a]=e[a]);return r}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(n=0;n<i.length;n++)a=i[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(r[a]=e[a])}return r}var d=n.createContext({}),p=function(e){var t=n.useContext(d),a=t;return e&&(a="function"==typeof e?e(t):s(s({},t),e)),a},o=function(e){var t=p(e.components);return n.createElement(d.Provider,{value:t},e.children)},m="mdxType",k={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},N=n.forwardRef((function(e,t){var a=e.components,r=e.mdxType,i=e.originalType,d=e.parentName,o=l(e,["components","mdxType","originalType","parentName"]),m=p(a),N=r,g=m["".concat(d,".").concat(N)]||m[N]||k[N]||i;return a?n.createElement(g,s(s({ref:t},o),{},{components:a})):n.createElement(g,s({ref:t},o))}));function g(e,t){var a=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var i=a.length,s=new Array(i);s[0]=N;var l={};for(var d in t)hasOwnProperty.call(t,d)&&(l[d]=t[d]);l.originalType=e,l[m]="string"==typeof e?e:r,s[1]=l;for(var p=2;p<i;p++)s[p]=a[p];return n.createElement.apply(null,s)}return n.createElement.apply(null,a)}N.displayName="MDXCreateElement"},6456:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>d,contentTitle:()=>s,default:()=>k,frontMatter:()=>i,metadata:()=>l,toc:()=>p});var n=a(8063),r=(a(9496),a(9613));const i={},s=void 0,l={unversionedId:"build-on-morph/sdk/classes/CrossChainMessenger",id:"build-on-morph/sdk/classes/CrossChainMessenger",title:"CrossChainMessenger",description:"@morph-l2/sdk / Exports / CrossChainMessenger",source:"@site/docs/build-on-morph/sdk/classes/CrossChainMessenger.md",sourceDirName:"build-on-morph/sdk/classes",slug:"/build-on-morph/sdk/classes/CrossChainMessenger",permalink:"/docs/build-on-morph/sdk/classes/CrossChainMessenger",draft:!1,editUrl:"https://github.com/morph-l2/morph-doc/tree/main/docs/build-on-morph/sdk/classes/CrossChainMessenger.md",tags:[],version:"current",frontMatter:{},sidebar:"DevSidebar",previous:{title:"Contract Address",permalink:"/docs/build-on-morph/developer-resources/contracts"},next:{title:"DAIBridgeAdapter",permalink:"/docs/build-on-morph/sdk/classes/DAIBridgeAdapter"}},d={},p=[{value:"Table of contents",id:"table-of-contents",level:2},{value:"Constructors",id:"constructors",level:3},{value:"Properties",id:"properties",level:3},{value:"Accessors",id:"accessors",level:3},{value:"Methods",id:"methods",level:3},{value:"Constructors",id:"constructors-1",level:2},{value:"constructor",id:"constructor",level:3},{value:"Parameters",id:"parameters",level:4},{value:"Defined in",id:"defined-in",level:4},{value:"Properties",id:"properties-1",level:2},{value:"backendURL",id:"backendurl",level:3},{value:"Defined in",id:"defined-in-1",level:4},{value:"bridges",id:"bridges",level:3},{value:"Defined in",id:"defined-in-2",level:4},{value:"contracts",id:"contracts",level:3},{value:"Defined in",id:"defined-in-3",level:4},{value:"depositConfirmationBlocks",id:"depositconfirmationblocks",level:3},{value:"Defined in",id:"defined-in-4",level:4},{value:"estimateGas",id:"estimategas",level:3},{value:"Type declaration",id:"type-declaration",level:4},{value:"Defined in",id:"defined-in-5",level:4},{value:"l1BlockTimeSeconds",id:"l1blocktimeseconds",level:3},{value:"Defined in",id:"defined-in-6",level:4},{value:"l1ChainId",id:"l1chainid",level:3},{value:"Defined in",id:"defined-in-7",level:4},{value:"l1SignerOrProvider",id:"l1signerorprovider",level:3},{value:"Defined in",id:"defined-in-8",level:4},{value:"l2ChainId",id:"l2chainid",level:3},{value:"Defined in",id:"defined-in-9",level:4},{value:"l2SignerOrProvider",id:"l2signerorprovider",level:3},{value:"Defined in",id:"defined-in-10",level:4},{value:"populateTransaction",id:"populatetransaction",level:3},{value:"Type declaration",id:"type-declaration-1",level:4},{value:"Defined in",id:"defined-in-11",level:4},{value:"Accessors",id:"accessors-1",level:2},{value:"l1Provider",id:"l1provider",level:3},{value:"Returns",id:"returns",level:4},{value:"Defined in",id:"defined-in-12",level:4},{value:"l1Signer",id:"l1signer",level:3},{value:"Returns",id:"returns-1",level:4},{value:"Defined in",id:"defined-in-13",level:4},{value:"l2Provider",id:"l2provider",level:3},{value:"Returns",id:"returns-2",level:4},{value:"Defined in",id:"defined-in-14",level:4},{value:"l2Signer",id:"l2signer",level:3},{value:"Returns",id:"returns-3",level:4},{value:"Defined in",id:"defined-in-15",level:4},{value:"Methods",id:"methods-1",level:2},{value:"approval",id:"approval",level:3},{value:"Parameters",id:"parameters-1",level:4},{value:"Returns",id:"returns-4",level:4},{value:"Defined in",id:"defined-in-16",level:4},{value:"approveERC20",id:"approveerc20",level:3},{value:"Parameters",id:"parameters-2",level:4},{value:"Returns",id:"returns-5",level:4},{value:"Defined in",id:"defined-in-17",level:4},{value:"depositERC20",id:"depositerc20",level:3},{value:"Parameters",id:"parameters-3",level:4},{value:"Returns",id:"returns-6",level:4},{value:"Defined in",id:"defined-in-18",level:4},{value:"depositETH",id:"depositeth",level:3},{value:"Parameters",id:"parameters-4",level:4},{value:"Returns",id:"returns-7",level:4},{value:"Defined in",id:"defined-in-19",level:4},{value:"estimateL2MessageGasLimit",id:"estimatel2messagegaslimit",level:3},{value:"Parameters",id:"parameters-5",level:4},{value:"Returns",id:"returns-8",level:4},{value:"Defined in",id:"defined-in-20",level:4},{value:"estimateMessageWaitTimeSeconds",id:"estimatemessagewaittimeseconds",level:3},{value:"Parameters",id:"parameters-6",level:4},{value:"Returns",id:"returns-9",level:4},{value:"Defined in",id:"defined-in-21",level:4},{value:"finalizeMessage",id:"finalizemessage",level:3},{value:"Parameters",id:"parameters-7",level:4},{value:"Returns",id:"returns-10",level:4},{value:"Defined in",id:"defined-in-22",level:4},{value:"getBackendTreeSyncIndex",id:"getbackendtreesyncindex",level:3},{value:"Returns",id:"returns-11",level:4},{value:"Defined in",id:"defined-in-23",level:4},{value:"getBridgeForTokenPair",id:"getbridgefortokenpair",level:3},{value:"Parameters",id:"parameters-8",level:4},{value:"Returns",id:"returns-12",level:4},{value:"Defined in",id:"defined-in-24",level:4},{value:"getChallengePeriodSeconds",id:"getchallengeperiodseconds",level:3},{value:"Returns",id:"returns-13",level:4},{value:"Defined in",id:"defined-in-25",level:4},{value:"getDepositsByAddress",id:"getdepositsbyaddress",level:3},{value:"Parameters",id:"parameters-9",level:4},{value:"Returns",id:"returns-14",level:4},{value:"Defined in",id:"defined-in-26",level:4},{value:"getMessageReceipt",id:"getmessagereceipt",level:3},{value:"Parameters",id:"parameters-10",level:4},{value:"Returns",id:"returns-15",level:4},{value:"Defined in",id:"defined-in-27",level:4},{value:"getMessageStatus",id:"getmessagestatus",level:3},{value:"Parameters",id:"parameters-11",level:4},{value:"Returns",id:"returns-16",level:4},{value:"Defined in",id:"defined-in-28",level:4},{value:"getMessagesByTransaction",id:"getmessagesbytransaction",level:3},{value:"Parameters",id:"parameters-12",level:4},{value:"Returns",id:"returns-17",level:4},{value:"Defined in",id:"defined-in-29",level:4},{value:"getProvenWithdrawal",id:"getprovenwithdrawal",level:3},{value:"Parameters",id:"parameters-13",level:4},{value:"Returns",id:"returns-18",level:4},{value:"Defined in",id:"defined-in-30",level:4},{value:"getWithdrawMessageProof",id:"getwithdrawmessageproof",level:3},{value:"Parameters",id:"parameters-14",level:4},{value:"Returns",id:"returns-19",level:4},{value:"Defined in",id:"defined-in-31",level:4},{value:"getWithdrawalsByAddress",id:"getwithdrawalsbyaddress",level:3},{value:"Parameters",id:"parameters-15",level:4},{value:"Returns",id:"returns-20",level:4},{value:"Defined in",id:"defined-in-32",level:4},{value:"proveMessage",id:"provemessage",level:3},{value:"Parameters",id:"parameters-16",level:4},{value:"Returns",id:"returns-21",level:4},{value:"Defined in",id:"defined-in-33",level:4},{value:"resendMessage",id:"resendmessage",level:3},{value:"Parameters",id:"parameters-17",level:4},{value:"Returns",id:"returns-22",level:4},{value:"Defined in",id:"defined-in-34",level:4},{value:"sendMessage",id:"sendmessage",level:3},{value:"Parameters",id:"parameters-18",level:4},{value:"Returns",id:"returns-23",level:4},{value:"Defined in",id:"defined-in-35",level:4},{value:"toBedrockCrossChainMessage",id:"tobedrockcrosschainmessage",level:3},{value:"Parameters",id:"parameters-19",level:4},{value:"Returns",id:"returns-24",level:4},{value:"Defined in",id:"defined-in-36",level:4},{value:"toCrossChainMessage",id:"tocrosschainmessage",level:3},{value:"Parameters",id:"parameters-20",level:4},{value:"Returns",id:"returns-25",level:4},{value:"Defined in",id:"defined-in-37",level:4},{value:"toLowLevelMessage",id:"tolowlevelmessage",level:3},{value:"Parameters",id:"parameters-21",level:4},{value:"Returns",id:"returns-26",level:4},{value:"Defined in",id:"defined-in-38",level:4},{value:"waitForMessageReceipt",id:"waitformessagereceipt",level:3},{value:"Parameters",id:"parameters-22",level:4},{value:"Returns",id:"returns-27",level:4},{value:"Defined in",id:"defined-in-39",level:4},{value:"waitForMessageStatus",id:"waitformessagestatus",level:3},{value:"Parameters",id:"parameters-23",level:4},{value:"Returns",id:"returns-28",level:4},{value:"Defined in",id:"defined-in-40",level:4},{value:"withdrawERC20",id:"withdrawerc20",level:3},{value:"Parameters",id:"parameters-24",level:4},{value:"Returns",id:"returns-29",level:4},{value:"Defined in",id:"defined-in-41",level:4},{value:"withdrawETH",id:"withdraweth",level:3},{value:"Parameters",id:"parameters-25",level:4},{value:"Returns",id:"returns-30",level:4},{value:"Defined in",id:"defined-in-42",level:4}],o={toc:p},m="wrapper";function k(e){let{components:t,...a}=e;return(0,r.kt)(m,(0,n.Z)({},o,a,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"../intro"},"@morph-l2/sdk")," / ",(0,r.kt)("a",{parentName:"p",href:"../modules"},"Exports")," / CrossChainMessenger"),(0,r.kt)("h1",{id:"class-crosschainmessenger"},"Class: CrossChainMessenger"),(0,r.kt)("h2",{id:"table-of-contents"},"Table of contents"),(0,r.kt)("h3",{id:"constructors"},"Constructors"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"CrossChainMessenger#constructor"},"constructor"))),(0,r.kt)("h3",{id:"properties"},"Properties"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"CrossChainMessenger#backendurl"},"backendURL")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"CrossChainMessenger#bridges"},"bridges")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"CrossChainMessenger#contracts"},"contracts")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"CrossChainMessenger#depositconfirmationblocks"},"depositConfirmationBlocks")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"CrossChainMessenger#estimategas"},"estimateGas")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"CrossChainMessenger#l1blocktimeseconds"},"l1BlockTimeSeconds")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"CrossChainMessenger#l1chainid"},"l1ChainId")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"CrossChainMessenger#l1signerorprovider"},"l1SignerOrProvider")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"CrossChainMessenger#l2chainid"},"l2ChainId")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"CrossChainMessenger#l2signerorprovider"},"l2SignerOrProvider")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"CrossChainMessenger#populatetransaction"},"populateTransaction"))),(0,r.kt)("h3",{id:"accessors"},"Accessors"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"CrossChainMessenger#l1provider"},"l1Provider")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"CrossChainMessenger#l1signer"},"l1Signer")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"CrossChainMessenger#l2provider"},"l2Provider")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"CrossChainMessenger#l2signer"},"l2Signer"))),(0,r.kt)("h3",{id:"methods"},"Methods"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"CrossChainMessenger#approval"},"approval")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"CrossChainMessenger#approveerc20"},"approveERC20")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"CrossChainMessenger#depositerc20"},"depositERC20")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"CrossChainMessenger#depositeth"},"depositETH")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"CrossChainMessenger#estimatel2messagegaslimit"},"estimateL2MessageGasLimit")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"CrossChainMessenger#estimatemessagewaittimeseconds"},"estimateMessageWaitTimeSeconds")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"CrossChainMessenger#finalizemessage"},"finalizeMessage")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"CrossChainMessenger#getbackendtreesyncindex"},"getBackendTreeSyncIndex")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"CrossChainMessenger#getbridgefortokenpair"},"getBridgeForTokenPair")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"CrossChainMessenger#getchallengeperiodseconds"},"getChallengePeriodSeconds")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"CrossChainMessenger#getdepositsbyaddress"},"getDepositsByAddress")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"CrossChainMessenger#getmessagereceipt"},"getMessageReceipt")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"CrossChainMessenger#getmessagestatus"},"getMessageStatus")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"CrossChainMessenger#getmessagesbytransaction"},"getMessagesByTransaction")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"CrossChainMessenger#getprovenwithdrawal"},"getProvenWithdrawal")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"CrossChainMessenger#getwithdrawmessageproof"},"getWithdrawMessageProof")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"CrossChainMessenger#getwithdrawalsbyaddress"},"getWithdrawalsByAddress")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"CrossChainMessenger#provemessage"},"proveMessage")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"CrossChainMessenger#resendmessage"},"resendMessage")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"CrossChainMessenger#sendmessage"},"sendMessage")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"CrossChainMessenger#tobedrockcrosschainmessage"},"toBedrockCrossChainMessage")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"CrossChainMessenger#tocrosschainmessage"},"toCrossChainMessage")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"CrossChainMessenger#tolowlevelmessage"},"toLowLevelMessage")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"CrossChainMessenger#waitformessagereceipt"},"waitForMessageReceipt")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"CrossChainMessenger#waitformessagestatus"},"waitForMessageStatus")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"CrossChainMessenger#withdrawerc20"},"withdrawERC20")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"CrossChainMessenger#withdraweth"},"withdrawETH"))),(0,r.kt)("h2",{id:"constructors-1"},"Constructors"),(0,r.kt)("h3",{id:"constructor"},"constructor"),(0,r.kt)("p",null,"\u2022 ",(0,r.kt)("strong",{parentName:"p"},"new CrossChainMessenger"),"(",(0,r.kt)("inlineCode",{parentName:"p"},"opts"),")"),(0,r.kt)("p",null,"Creates a new CrossChainProvider instance."),(0,r.kt)("h4",{id:"parameters"},"Parameters"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"opts")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"Object")),(0,r.kt)("td",{parentName:"tr",align:"left"},"Options for the provider.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"opts.backendURL?")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"string")),(0,r.kt)("td",{parentName:"tr",align:"left"},"backend for withdraw proof gen.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"opts.bridges?")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("a",{parentName:"td",href:"../interfaces/BridgeAdapterData"},(0,r.kt)("inlineCode",{parentName:"a"},"BridgeAdapterData"))),(0,r.kt)("td",{parentName:"tr",align:"left"},"Optional bridge address list.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"opts.contracts?")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("a",{parentName:"td",href:"../modules#deeppartial"},(0,r.kt)("inlineCode",{parentName:"a"},"DeepPartial")),"<",(0,r.kt)("a",{parentName:"td",href:"../interfaces/OEContractsLike"},(0,r.kt)("inlineCode",{parentName:"a"},"OEContractsLike")),">"),(0,r.kt)("td",{parentName:"tr",align:"left"},"Optional contract address overrides.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"opts.depositConfirmationBlocks?")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("a",{parentName:"td",href:"../modules#numberlike"},(0,r.kt)("inlineCode",{parentName:"a"},"NumberLike"))),(0,r.kt)("td",{parentName:"tr",align:"left"},"Optional number of blocks before a deposit is confirmed.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"opts.l1BlockTimeSeconds?")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("a",{parentName:"td",href:"../modules#numberlike"},(0,r.kt)("inlineCode",{parentName:"a"},"NumberLike"))),(0,r.kt)("td",{parentName:"tr",align:"left"},"Optional estimated block time in seconds for the L1 chain.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"opts.l1ChainId")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("a",{parentName:"td",href:"../modules#numberlike"},(0,r.kt)("inlineCode",{parentName:"a"},"NumberLike"))),(0,r.kt)("td",{parentName:"tr",align:"left"},"Chain ID for the L1 chain.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"opts.l1SignerOrProvider")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("a",{parentName:"td",href:"../modules#signerorproviderlike"},(0,r.kt)("inlineCode",{parentName:"a"},"SignerOrProviderLike"))),(0,r.kt)("td",{parentName:"tr",align:"left"},"Signer or Provider for the L1 chain, or a JSON-RPC url.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"opts.l2ChainId")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("a",{parentName:"td",href:"../modules#numberlike"},(0,r.kt)("inlineCode",{parentName:"a"},"NumberLike"))),(0,r.kt)("td",{parentName:"tr",align:"left"},"Chain ID for the L2 chain.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"opts.l2SignerOrProvider")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("a",{parentName:"td",href:"../modules#signerorproviderlike"},(0,r.kt)("inlineCode",{parentName:"a"},"SignerOrProviderLike"))),(0,r.kt)("td",{parentName:"tr",align:"left"},"Signer or Provider for the L2 chain, or a JSON-RPC url.")))),(0,r.kt)("h4",{id:"defined-in"},"Defined in"),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"https://github.com/morph-l2/sdk/tree/97c4394/src/cross-chain-messenger.ts#L130"},"src/cross-chain-messenger.ts:130")),(0,r.kt)("h2",{id:"properties-1"},"Properties"),(0,r.kt)("h3",{id:"backendurl"},"backendURL"),(0,r.kt)("p",null,"\u2022 ",(0,r.kt)("strong",{parentName:"p"},"backendURL"),": ",(0,r.kt)("inlineCode",{parentName:"p"},"string")),(0,r.kt)("p",null,"Backend url for withdrawal prove server"),(0,r.kt)("h4",{id:"defined-in-1"},"Defined in"),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"https://github.com/morph-l2/sdk/tree/97c4394/src/cross-chain-messenger.ts#L73"},"src/cross-chain-messenger.ts:73")),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"bridges"},"bridges"),(0,r.kt)("p",null,"\u2022 ",(0,r.kt)("strong",{parentName:"p"},"bridges"),": ",(0,r.kt)("a",{parentName:"p",href:"../interfaces/BridgeAdapters"},(0,r.kt)("inlineCode",{parentName:"a"},"BridgeAdapters"))),(0,r.kt)("p",null,"List of custom bridges for the given network."),(0,r.kt)("h4",{id:"defined-in-2"},"Defined in"),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"https://github.com/morph-l2/sdk/tree/97c4394/src/cross-chain-messenger.ts#L103"},"src/cross-chain-messenger.ts:103")),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"contracts"},"contracts"),(0,r.kt)("p",null,"\u2022 ",(0,r.kt)("strong",{parentName:"p"},"contracts"),": ",(0,r.kt)("a",{parentName:"p",href:"../interfaces/OEContracts"},(0,r.kt)("inlineCode",{parentName:"a"},"OEContracts"))),(0,r.kt)("p",null,"Contract objects attached to their respective providers and addresses."),(0,r.kt)("h4",{id:"defined-in-3"},"Defined in"),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"https://github.com/morph-l2/sdk/tree/97c4394/src/cross-chain-messenger.ts#L98"},"src/cross-chain-messenger.ts:98")),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"depositconfirmationblocks"},"depositConfirmationBlocks"),(0,r.kt)("p",null,"\u2022 ",(0,r.kt)("strong",{parentName:"p"},"depositConfirmationBlocks"),": ",(0,r.kt)("inlineCode",{parentName:"p"},"number")),(0,r.kt)("p",null,"Number of blocks before a deposit is considered confirmed."),(0,r.kt)("h4",{id:"defined-in-4"},"Defined in"),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"https://github.com/morph-l2/sdk/tree/97c4394/src/cross-chain-messenger.ts#L108"},"src/cross-chain-messenger.ts:108")),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"estimategas"},"estimateGas"),(0,r.kt)("p",null,"\u2022 ",(0,r.kt)("strong",{parentName:"p"},"estimateGas"),": ",(0,r.kt)("inlineCode",{parentName:"p"},"Object")),(0,r.kt)("p",null,"Object that holds the functions that estimates the gas required for a given transaction.\nFollows the pattern used by ethers.js."),(0,r.kt)("h4",{id:"type-declaration"},"Type declaration"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Type"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"approveERC20")),(0,r.kt)("td",{parentName:"tr",align:"left"},"(",(0,r.kt)("inlineCode",{parentName:"td"},"l1Token"),": ",(0,r.kt)("a",{parentName:"td",href:"../modules#addresslike"},(0,r.kt)("inlineCode",{parentName:"a"},"AddressLike")),", ",(0,r.kt)("inlineCode",{parentName:"td"},"l2Token"),": ",(0,r.kt)("a",{parentName:"td",href:"../modules#addresslike"},(0,r.kt)("inlineCode",{parentName:"a"},"AddressLike")),", ",(0,r.kt)("inlineCode",{parentName:"td"},"amount"),": ",(0,r.kt)("a",{parentName:"td",href:"../modules#numberlike"},(0,r.kt)("inlineCode",{parentName:"a"},"NumberLike")),", ",(0,r.kt)("inlineCode",{parentName:"td"},"opts?"),": { ",(0,r.kt)("inlineCode",{parentName:"td"},"overrides?"),": ",(0,r.kt)("inlineCode",{parentName:"td"},"CallOverrides"),"  }) => ",(0,r.kt)("inlineCode",{parentName:"td"},"Promise"),"<",(0,r.kt)("inlineCode",{parentName:"td"},"BigNumber"),">")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"depositERC20")),(0,r.kt)("td",{parentName:"tr",align:"left"},"(",(0,r.kt)("inlineCode",{parentName:"td"},"l1Token"),": ",(0,r.kt)("a",{parentName:"td",href:"../modules#addresslike"},(0,r.kt)("inlineCode",{parentName:"a"},"AddressLike")),", ",(0,r.kt)("inlineCode",{parentName:"td"},"l2Token"),": ",(0,r.kt)("a",{parentName:"td",href:"../modules#addresslike"},(0,r.kt)("inlineCode",{parentName:"a"},"AddressLike")),", ",(0,r.kt)("inlineCode",{parentName:"td"},"amount"),": ",(0,r.kt)("a",{parentName:"td",href:"../modules#numberlike"},(0,r.kt)("inlineCode",{parentName:"a"},"NumberLike")),", ",(0,r.kt)("inlineCode",{parentName:"td"},"opts?"),": { ",(0,r.kt)("inlineCode",{parentName:"td"},"l2GasLimit?"),": ",(0,r.kt)("a",{parentName:"td",href:"../modules#numberlike"},(0,r.kt)("inlineCode",{parentName:"a"},"NumberLike"))," ; ",(0,r.kt)("inlineCode",{parentName:"td"},"overrides?"),": ",(0,r.kt)("inlineCode",{parentName:"td"},"CallOverrides")," ; ",(0,r.kt)("inlineCode",{parentName:"td"},"recipient?"),": ",(0,r.kt)("a",{parentName:"td",href:"../modules#addresslike"},(0,r.kt)("inlineCode",{parentName:"a"},"AddressLike")),"  }) => ",(0,r.kt)("inlineCode",{parentName:"td"},"Promise"),"<",(0,r.kt)("inlineCode",{parentName:"td"},"BigNumber"),">")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"depositETH")),(0,r.kt)("td",{parentName:"tr",align:"left"},"(",(0,r.kt)("inlineCode",{parentName:"td"},"amount"),": ",(0,r.kt)("a",{parentName:"td",href:"../modules#numberlike"},(0,r.kt)("inlineCode",{parentName:"a"},"NumberLike")),", ",(0,r.kt)("inlineCode",{parentName:"td"},"opts?"),": { ",(0,r.kt)("inlineCode",{parentName:"td"},"l2GasLimit?"),": ",(0,r.kt)("a",{parentName:"td",href:"../modules#numberlike"},(0,r.kt)("inlineCode",{parentName:"a"},"NumberLike"))," ; ",(0,r.kt)("inlineCode",{parentName:"td"},"overrides?"),": ",(0,r.kt)("inlineCode",{parentName:"td"},"CallOverrides")," ; ",(0,r.kt)("inlineCode",{parentName:"td"},"recipient?"),": ",(0,r.kt)("a",{parentName:"td",href:"../modules#addresslike"},(0,r.kt)("inlineCode",{parentName:"a"},"AddressLike")),"  }) => ",(0,r.kt)("inlineCode",{parentName:"td"},"Promise"),"<",(0,r.kt)("inlineCode",{parentName:"td"},"BigNumber"),">")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"finalizeMessage")),(0,r.kt)("td",{parentName:"tr",align:"left"},"(",(0,r.kt)("inlineCode",{parentName:"td"},"message"),": ",(0,r.kt)("a",{parentName:"td",href:"../modules#messagelike"},(0,r.kt)("inlineCode",{parentName:"a"},"MessageLike")),", ",(0,r.kt)("inlineCode",{parentName:"td"},"opts?"),": { ",(0,r.kt)("inlineCode",{parentName:"td"},"overrides?"),": ",(0,r.kt)("inlineCode",{parentName:"td"},"CallOverrides"),"  }) => ",(0,r.kt)("inlineCode",{parentName:"td"},"Promise"),"<",(0,r.kt)("inlineCode",{parentName:"td"},"BigNumber"),">")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"proveMessage")),(0,r.kt)("td",{parentName:"tr",align:"left"},"(",(0,r.kt)("inlineCode",{parentName:"td"},"message"),": ",(0,r.kt)("a",{parentName:"td",href:"../modules#messagelike"},(0,r.kt)("inlineCode",{parentName:"a"},"MessageLike")),", ",(0,r.kt)("inlineCode",{parentName:"td"},"opts?"),": { ",(0,r.kt)("inlineCode",{parentName:"td"},"overrides?"),": ",(0,r.kt)("inlineCode",{parentName:"td"},"CallOverrides"),"  }) => ",(0,r.kt)("inlineCode",{parentName:"td"},"Promise"),"<",(0,r.kt)("inlineCode",{parentName:"td"},"BigNumber"),">")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"resendMessage")),(0,r.kt)("td",{parentName:"tr",align:"left"},"(",(0,r.kt)("inlineCode",{parentName:"td"},"message"),": ",(0,r.kt)("a",{parentName:"td",href:"../modules#messagelike"},(0,r.kt)("inlineCode",{parentName:"a"},"MessageLike")),", ",(0,r.kt)("inlineCode",{parentName:"td"},"messageGasLimit"),": ",(0,r.kt)("a",{parentName:"td",href:"../modules#numberlike"},(0,r.kt)("inlineCode",{parentName:"a"},"NumberLike")),", ",(0,r.kt)("inlineCode",{parentName:"td"},"opts?"),": { ",(0,r.kt)("inlineCode",{parentName:"td"},"overrides?"),": ",(0,r.kt)("inlineCode",{parentName:"td"},"CallOverrides"),"  }) => ",(0,r.kt)("inlineCode",{parentName:"td"},"Promise"),"<",(0,r.kt)("inlineCode",{parentName:"td"},"BigNumber"),">")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"sendMessage")),(0,r.kt)("td",{parentName:"tr",align:"left"},"(",(0,r.kt)("inlineCode",{parentName:"td"},"message"),": ",(0,r.kt)("a",{parentName:"td",href:"../interfaces/CrossChainMessageRequest"},(0,r.kt)("inlineCode",{parentName:"a"},"CrossChainMessageRequest")),", ",(0,r.kt)("inlineCode",{parentName:"td"},"opts?"),": { ",(0,r.kt)("inlineCode",{parentName:"td"},"l2GasLimit?"),": ",(0,r.kt)("a",{parentName:"td",href:"../modules#numberlike"},(0,r.kt)("inlineCode",{parentName:"a"},"NumberLike"))," ; ",(0,r.kt)("inlineCode",{parentName:"td"},"overrides?"),": ",(0,r.kt)("inlineCode",{parentName:"td"},"CallOverrides"),"  }) => ",(0,r.kt)("inlineCode",{parentName:"td"},"Promise"),"<",(0,r.kt)("inlineCode",{parentName:"td"},"BigNumber"),">")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"withdrawERC20")),(0,r.kt)("td",{parentName:"tr",align:"left"},"(",(0,r.kt)("inlineCode",{parentName:"td"},"l1Token"),": ",(0,r.kt)("a",{parentName:"td",href:"../modules#addresslike"},(0,r.kt)("inlineCode",{parentName:"a"},"AddressLike")),", ",(0,r.kt)("inlineCode",{parentName:"td"},"l2Token"),": ",(0,r.kt)("a",{parentName:"td",href:"../modules#addresslike"},(0,r.kt)("inlineCode",{parentName:"a"},"AddressLike")),", ",(0,r.kt)("inlineCode",{parentName:"td"},"amount"),": ",(0,r.kt)("a",{parentName:"td",href:"../modules#numberlike"},(0,r.kt)("inlineCode",{parentName:"a"},"NumberLike")),", ",(0,r.kt)("inlineCode",{parentName:"td"},"opts?"),": { ",(0,r.kt)("inlineCode",{parentName:"td"},"overrides?"),": ",(0,r.kt)("inlineCode",{parentName:"td"},"CallOverrides")," ; ",(0,r.kt)("inlineCode",{parentName:"td"},"recipient?"),": ",(0,r.kt)("a",{parentName:"td",href:"../modules#addresslike"},(0,r.kt)("inlineCode",{parentName:"a"},"AddressLike")),"  }) => ",(0,r.kt)("inlineCode",{parentName:"td"},"Promise"),"<",(0,r.kt)("inlineCode",{parentName:"td"},"BigNumber"),">")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"withdrawETH")),(0,r.kt)("td",{parentName:"tr",align:"left"},"(",(0,r.kt)("inlineCode",{parentName:"td"},"amount"),": ",(0,r.kt)("a",{parentName:"td",href:"../modules#numberlike"},(0,r.kt)("inlineCode",{parentName:"a"},"NumberLike")),", ",(0,r.kt)("inlineCode",{parentName:"td"},"opts?"),": { ",(0,r.kt)("inlineCode",{parentName:"td"},"overrides?"),": ",(0,r.kt)("inlineCode",{parentName:"td"},"CallOverrides")," ; ",(0,r.kt)("inlineCode",{parentName:"td"},"recipient?"),": ",(0,r.kt)("a",{parentName:"td",href:"../modules#addresslike"},(0,r.kt)("inlineCode",{parentName:"a"},"AddressLike")),"  }) => ",(0,r.kt)("inlineCode",{parentName:"td"},"Promise"),"<",(0,r.kt)("inlineCode",{parentName:"td"},"BigNumber"),">")))),(0,r.kt)("h4",{id:"defined-in-5"},"Defined in"),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"https://github.com/morph-l2/sdk/tree/97c4394/src/cross-chain-messenger.ts#L1606"},"src/cross-chain-messenger.ts:1606")),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"l1blocktimeseconds"},"l1BlockTimeSeconds"),(0,r.kt)("p",null,"\u2022 ",(0,r.kt)("strong",{parentName:"p"},"l1BlockTimeSeconds"),": ",(0,r.kt)("inlineCode",{parentName:"p"},"number")),(0,r.kt)("p",null,"Estimated average L1 block time in seconds."),(0,r.kt)("h4",{id:"defined-in-6"},"Defined in"),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"https://github.com/morph-l2/sdk/tree/97c4394/src/cross-chain-messenger.ts#L113"},"src/cross-chain-messenger.ts:113")),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"l1chainid"},"l1ChainId"),(0,r.kt)("p",null,"\u2022 ",(0,r.kt)("strong",{parentName:"p"},"l1ChainId"),": ",(0,r.kt)("inlineCode",{parentName:"p"},"number")),(0,r.kt)("p",null,"Chain ID for the L1 network."),(0,r.kt)("h4",{id:"defined-in-7"},"Defined in"),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"https://github.com/morph-l2/sdk/tree/97c4394/src/cross-chain-messenger.ts#L88"},"src/cross-chain-messenger.ts:88")),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"l1signerorprovider"},"l1SignerOrProvider"),(0,r.kt)("p",null,"\u2022 ",(0,r.kt)("strong",{parentName:"p"},"l1SignerOrProvider"),": ",(0,r.kt)("inlineCode",{parentName:"p"},"Provider")," ","|"," ",(0,r.kt)("inlineCode",{parentName:"p"},"Signer")),(0,r.kt)("p",null,"Provider connected to the L1 chain."),(0,r.kt)("h4",{id:"defined-in-8"},"Defined in"),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"https://github.com/morph-l2/sdk/tree/97c4394/src/cross-chain-messenger.ts#L78"},"src/cross-chain-messenger.ts:78")),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"l2chainid"},"l2ChainId"),(0,r.kt)("p",null,"\u2022 ",(0,r.kt)("strong",{parentName:"p"},"l2ChainId"),": ",(0,r.kt)("inlineCode",{parentName:"p"},"number")),(0,r.kt)("p",null,"Chain ID for the L2 network."),(0,r.kt)("h4",{id:"defined-in-9"},"Defined in"),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"https://github.com/morph-l2/sdk/tree/97c4394/src/cross-chain-messenger.ts#L93"},"src/cross-chain-messenger.ts:93")),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"l2signerorprovider"},"l2SignerOrProvider"),(0,r.kt)("p",null,"\u2022 ",(0,r.kt)("strong",{parentName:"p"},"l2SignerOrProvider"),": ",(0,r.kt)("inlineCode",{parentName:"p"},"Provider")," ","|"," ",(0,r.kt)("inlineCode",{parentName:"p"},"Signer")),(0,r.kt)("p",null,"Provider connected to the L2 chain."),(0,r.kt)("h4",{id:"defined-in-10"},"Defined in"),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"https://github.com/morph-l2/sdk/tree/97c4394/src/cross-chain-messenger.ts#L83"},"src/cross-chain-messenger.ts:83")),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"populatetransaction"},"populateTransaction"),(0,r.kt)("p",null,"\u2022 ",(0,r.kt)("strong",{parentName:"p"},"populateTransaction"),": ",(0,r.kt)("inlineCode",{parentName:"p"},"Object")),(0,r.kt)("p",null,"Object that holds the functions that generate transactions to be signed by the user.\nFollows the pattern used by ethers.js."),(0,r.kt)("h4",{id:"type-declaration-1"},"Type declaration"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Type"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"approveERC20")),(0,r.kt)("td",{parentName:"tr",align:"left"},"(",(0,r.kt)("inlineCode",{parentName:"td"},"l1Token"),": ",(0,r.kt)("a",{parentName:"td",href:"../modules#addresslike"},(0,r.kt)("inlineCode",{parentName:"a"},"AddressLike")),", ",(0,r.kt)("inlineCode",{parentName:"td"},"l2Token"),": ",(0,r.kt)("a",{parentName:"td",href:"../modules#addresslike"},(0,r.kt)("inlineCode",{parentName:"a"},"AddressLike")),", ",(0,r.kt)("inlineCode",{parentName:"td"},"amount"),": ",(0,r.kt)("a",{parentName:"td",href:"../modules#numberlike"},(0,r.kt)("inlineCode",{parentName:"a"},"NumberLike")),", ",(0,r.kt)("inlineCode",{parentName:"td"},"opts?"),": { ",(0,r.kt)("inlineCode",{parentName:"td"},"overrides?"),": ",(0,r.kt)("inlineCode",{parentName:"td"},"Overrides"),"  }) => ",(0,r.kt)("inlineCode",{parentName:"td"},"Promise"),"<",(0,r.kt)("inlineCode",{parentName:"td"},"TransactionRequest"),">")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"depositERC20")),(0,r.kt)("td",{parentName:"tr",align:"left"},"(",(0,r.kt)("inlineCode",{parentName:"td"},"l1Token"),": ",(0,r.kt)("a",{parentName:"td",href:"../modules#addresslike"},(0,r.kt)("inlineCode",{parentName:"a"},"AddressLike")),", ",(0,r.kt)("inlineCode",{parentName:"td"},"l2Token"),": ",(0,r.kt)("a",{parentName:"td",href:"../modules#addresslike"},(0,r.kt)("inlineCode",{parentName:"a"},"AddressLike")),", ",(0,r.kt)("inlineCode",{parentName:"td"},"amount"),": ",(0,r.kt)("a",{parentName:"td",href:"../modules#numberlike"},(0,r.kt)("inlineCode",{parentName:"a"},"NumberLike")),", ",(0,r.kt)("inlineCode",{parentName:"td"},"opts?"),": { ",(0,r.kt)("inlineCode",{parentName:"td"},"l2GasLimit?"),": ",(0,r.kt)("a",{parentName:"td",href:"../modules#numberlike"},(0,r.kt)("inlineCode",{parentName:"a"},"NumberLike"))," ; ",(0,r.kt)("inlineCode",{parentName:"td"},"overrides?"),": ",(0,r.kt)("inlineCode",{parentName:"td"},"Overrides")," ; ",(0,r.kt)("inlineCode",{parentName:"td"},"recipient?"),": ",(0,r.kt)("a",{parentName:"td",href:"../modules#addresslike"},(0,r.kt)("inlineCode",{parentName:"a"},"AddressLike")),"  }) => ",(0,r.kt)("inlineCode",{parentName:"td"},"Promise"),"<",(0,r.kt)("inlineCode",{parentName:"td"},"TransactionRequest"),">")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"depositETH")),(0,r.kt)("td",{parentName:"tr",align:"left"},"(",(0,r.kt)("inlineCode",{parentName:"td"},"amount"),": ",(0,r.kt)("a",{parentName:"td",href:"../modules#numberlike"},(0,r.kt)("inlineCode",{parentName:"a"},"NumberLike")),", ",(0,r.kt)("inlineCode",{parentName:"td"},"opts?"),": { ",(0,r.kt)("inlineCode",{parentName:"td"},"l2GasLimit?"),": ",(0,r.kt)("a",{parentName:"td",href:"../modules#numberlike"},(0,r.kt)("inlineCode",{parentName:"a"},"NumberLike"))," ; ",(0,r.kt)("inlineCode",{parentName:"td"},"overrides?"),": ",(0,r.kt)("inlineCode",{parentName:"td"},"PayableOverrides")," ; ",(0,r.kt)("inlineCode",{parentName:"td"},"recipient?"),": ",(0,r.kt)("a",{parentName:"td",href:"../modules#addresslike"},(0,r.kt)("inlineCode",{parentName:"a"},"AddressLike")),"  }) => ",(0,r.kt)("inlineCode",{parentName:"td"},"Promise"),"<",(0,r.kt)("inlineCode",{parentName:"td"},"TransactionRequest"),">")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"finalizeMessage")),(0,r.kt)("td",{parentName:"tr",align:"left"},"(",(0,r.kt)("inlineCode",{parentName:"td"},"message"),": ",(0,r.kt)("a",{parentName:"td",href:"../modules#messagelike"},(0,r.kt)("inlineCode",{parentName:"a"},"MessageLike")),", ",(0,r.kt)("inlineCode",{parentName:"td"},"opts?"),": { ",(0,r.kt)("inlineCode",{parentName:"td"},"overrides?"),": ",(0,r.kt)("inlineCode",{parentName:"td"},"PayableOverrides"),"  }) => ",(0,r.kt)("inlineCode",{parentName:"td"},"Promise"),"<",(0,r.kt)("inlineCode",{parentName:"td"},"TransactionRequest"),">")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"proveMessage")),(0,r.kt)("td",{parentName:"tr",align:"left"},"(",(0,r.kt)("inlineCode",{parentName:"td"},"message"),": ",(0,r.kt)("a",{parentName:"td",href:"../modules#messagelike"},(0,r.kt)("inlineCode",{parentName:"a"},"MessageLike")),", ",(0,r.kt)("inlineCode",{parentName:"td"},"opts?"),": { ",(0,r.kt)("inlineCode",{parentName:"td"},"overrides?"),": ",(0,r.kt)("inlineCode",{parentName:"td"},"PayableOverrides"),"  }) => ",(0,r.kt)("inlineCode",{parentName:"td"},"Promise"),"<",(0,r.kt)("inlineCode",{parentName:"td"},"TransactionRequest"),">")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"resendMessage")),(0,r.kt)("td",{parentName:"tr",align:"left"},"(",(0,r.kt)("inlineCode",{parentName:"td"},"message"),": ",(0,r.kt)("a",{parentName:"td",href:"../modules#messagelike"},(0,r.kt)("inlineCode",{parentName:"a"},"MessageLike")),", ",(0,r.kt)("inlineCode",{parentName:"td"},"messageGasLimit"),": ",(0,r.kt)("a",{parentName:"td",href:"../modules#numberlike"},(0,r.kt)("inlineCode",{parentName:"a"},"NumberLike")),", ",(0,r.kt)("inlineCode",{parentName:"td"},"opts?"),": { ",(0,r.kt)("inlineCode",{parentName:"td"},"overrides?"),": ",(0,r.kt)("inlineCode",{parentName:"td"},"Overrides"),"  }) => ",(0,r.kt)("inlineCode",{parentName:"td"},"Promise"),"<",(0,r.kt)("inlineCode",{parentName:"td"},"TransactionRequest"),">")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"sendMessage")),(0,r.kt)("td",{parentName:"tr",align:"left"},"(",(0,r.kt)("inlineCode",{parentName:"td"},"message"),": ",(0,r.kt)("a",{parentName:"td",href:"../interfaces/CrossChainMessageRequest"},(0,r.kt)("inlineCode",{parentName:"a"},"CrossChainMessageRequest")),", ",(0,r.kt)("inlineCode",{parentName:"td"},"opts?"),": { ",(0,r.kt)("inlineCode",{parentName:"td"},"l2GasLimit?"),": ",(0,r.kt)("a",{parentName:"td",href:"../modules#numberlike"},(0,r.kt)("inlineCode",{parentName:"a"},"NumberLike"))," ; ",(0,r.kt)("inlineCode",{parentName:"td"},"overrides?"),": ",(0,r.kt)("inlineCode",{parentName:"td"},"Overrides"),"  }) => ",(0,r.kt)("inlineCode",{parentName:"td"},"Promise"),"<",(0,r.kt)("inlineCode",{parentName:"td"},"TransactionRequest"),">")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"withdrawERC20")),(0,r.kt)("td",{parentName:"tr",align:"left"},"(",(0,r.kt)("inlineCode",{parentName:"td"},"l1Token"),": ",(0,r.kt)("a",{parentName:"td",href:"../modules#addresslike"},(0,r.kt)("inlineCode",{parentName:"a"},"AddressLike")),", ",(0,r.kt)("inlineCode",{parentName:"td"},"l2Token"),": ",(0,r.kt)("a",{parentName:"td",href:"../modules#addresslike"},(0,r.kt)("inlineCode",{parentName:"a"},"AddressLike")),", ",(0,r.kt)("inlineCode",{parentName:"td"},"amount"),": ",(0,r.kt)("a",{parentName:"td",href:"../modules#numberlike"},(0,r.kt)("inlineCode",{parentName:"a"},"NumberLike")),", ",(0,r.kt)("inlineCode",{parentName:"td"},"opts?"),": { ",(0,r.kt)("inlineCode",{parentName:"td"},"overrides?"),": ",(0,r.kt)("inlineCode",{parentName:"td"},"Overrides")," ; ",(0,r.kt)("inlineCode",{parentName:"td"},"recipient?"),": ",(0,r.kt)("a",{parentName:"td",href:"../modules#addresslike"},(0,r.kt)("inlineCode",{parentName:"a"},"AddressLike")),"  }) => ",(0,r.kt)("inlineCode",{parentName:"td"},"Promise"),"<",(0,r.kt)("inlineCode",{parentName:"td"},"TransactionRequest"),">")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"withdrawETH")),(0,r.kt)("td",{parentName:"tr",align:"left"},"(",(0,r.kt)("inlineCode",{parentName:"td"},"amount"),": ",(0,r.kt)("a",{parentName:"td",href:"../modules#numberlike"},(0,r.kt)("inlineCode",{parentName:"a"},"NumberLike")),", ",(0,r.kt)("inlineCode",{parentName:"td"},"opts?"),": { ",(0,r.kt)("inlineCode",{parentName:"td"},"overrides?"),": ",(0,r.kt)("inlineCode",{parentName:"td"},"Overrides")," ; ",(0,r.kt)("inlineCode",{parentName:"td"},"recipient?"),": ",(0,r.kt)("a",{parentName:"td",href:"../modules#addresslike"},(0,r.kt)("inlineCode",{parentName:"a"},"AddressLike")),"  }) => ",(0,r.kt)("inlineCode",{parentName:"td"},"Promise"),"<",(0,r.kt)("inlineCode",{parentName:"td"},"TransactionRequest"),">")))),(0,r.kt)("h4",{id:"defined-in-11"},"Defined in"),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"https://github.com/morph-l2/sdk/tree/97c4394/src/cross-chain-messenger.ts#L1337"},"src/cross-chain-messenger.ts:1337")),(0,r.kt)("h2",{id:"accessors-1"},"Accessors"),(0,r.kt)("h3",{id:"l1provider"},"l1Provider"),(0,r.kt)("p",null,"\u2022 ",(0,r.kt)("inlineCode",{parentName:"p"},"get")," ",(0,r.kt)("strong",{parentName:"p"},"l1Provider"),"(): ",(0,r.kt)("inlineCode",{parentName:"p"},"Provider")),(0,r.kt)("p",null,"Provider connected to the L1 chain."),(0,r.kt)("h4",{id:"returns"},"Returns"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"Provider")),(0,r.kt)("h4",{id:"defined-in-12"},"Defined in"),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"https://github.com/morph-l2/sdk/tree/97c4394/src/cross-chain-messenger.ts#L183"},"src/cross-chain-messenger.ts:183")),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"l1signer"},"l1Signer"),(0,r.kt)("p",null,"\u2022 ",(0,r.kt)("inlineCode",{parentName:"p"},"get")," ",(0,r.kt)("strong",{parentName:"p"},"l1Signer"),"(): ",(0,r.kt)("inlineCode",{parentName:"p"},"Signer")),(0,r.kt)("p",null,"Signer connected to the L1 chain."),(0,r.kt)("h4",{id:"returns-1"},"Returns"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"Signer")),(0,r.kt)("h4",{id:"defined-in-13"},"Defined in"),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"https://github.com/morph-l2/sdk/tree/97c4394/src/cross-chain-messenger.ts#L205"},"src/cross-chain-messenger.ts:205")),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"l2provider"},"l2Provider"),(0,r.kt)("p",null,"\u2022 ",(0,r.kt)("inlineCode",{parentName:"p"},"get")," ",(0,r.kt)("strong",{parentName:"p"},"l2Provider"),"(): ",(0,r.kt)("inlineCode",{parentName:"p"},"Provider")),(0,r.kt)("p",null,"Provider connected to the L2 chain."),(0,r.kt)("h4",{id:"returns-2"},"Returns"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"Provider")),(0,r.kt)("h4",{id:"defined-in-14"},"Defined in"),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"https://github.com/morph-l2/sdk/tree/97c4394/src/cross-chain-messenger.ts#L194"},"src/cross-chain-messenger.ts:194")),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"l2signer"},"l2Signer"),(0,r.kt)("p",null,"\u2022 ",(0,r.kt)("inlineCode",{parentName:"p"},"get")," ",(0,r.kt)("strong",{parentName:"p"},"l2Signer"),"(): ",(0,r.kt)("inlineCode",{parentName:"p"},"Signer")),(0,r.kt)("p",null,"Signer connected to the L2 chain."),(0,r.kt)("h4",{id:"returns-3"},"Returns"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"Signer")),(0,r.kt)("h4",{id:"defined-in-15"},"Defined in"),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"https://github.com/morph-l2/sdk/tree/97c4394/src/cross-chain-messenger.ts#L216"},"src/cross-chain-messenger.ts:216")),(0,r.kt)("h2",{id:"methods-1"},"Methods"),(0,r.kt)("h3",{id:"approval"},"approval"),(0,r.kt)("p",null,"\u25b8 ",(0,r.kt)("strong",{parentName:"p"},"approval"),"(",(0,r.kt)("inlineCode",{parentName:"p"},"l1Token"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"l2Token"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"opts?"),"): ",(0,r.kt)("inlineCode",{parentName:"p"},"Promise"),"<",(0,r.kt)("inlineCode",{parentName:"p"},"BigNumber"),">"),(0,r.kt)("p",null,"Queries the account's approval amount for a given L1 token."),(0,r.kt)("h4",{id:"parameters-1"},"Parameters"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"l1Token")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("a",{parentName:"td",href:"../modules#addresslike"},(0,r.kt)("inlineCode",{parentName:"a"},"AddressLike"))),(0,r.kt)("td",{parentName:"tr",align:"left"},"The L1 token address.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"l2Token")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("a",{parentName:"td",href:"../modules#addresslike"},(0,r.kt)("inlineCode",{parentName:"a"},"AddressLike"))),(0,r.kt)("td",{parentName:"tr",align:"left"},"The L2 token address.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"opts?")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"Object")),(0,r.kt)("td",{parentName:"tr",align:"left"},"Additional options.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"opts.signer?")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"Signer")),(0,r.kt)("td",{parentName:"tr",align:"left"},"Optional signer to get the approval for.")))),(0,r.kt)("h4",{id:"returns-4"},"Returns"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"Promise"),"<",(0,r.kt)("inlineCode",{parentName:"p"},"BigNumber"),">"),(0,r.kt)("p",null,"Amount of tokens approved for deposits from the account."),(0,r.kt)("h4",{id:"defined-in-16"},"Defined in"),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"https://github.com/morph-l2/sdk/tree/97c4394/src/cross-chain-messenger.ts#L1226"},"src/cross-chain-messenger.ts:1226")),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"approveerc20"},"approveERC20"),(0,r.kt)("p",null,"\u25b8 ",(0,r.kt)("strong",{parentName:"p"},"approveERC20"),"(",(0,r.kt)("inlineCode",{parentName:"p"},"l1Token"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"l2Token"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"amount"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"opts?"),"): ",(0,r.kt)("inlineCode",{parentName:"p"},"Promise"),"<",(0,r.kt)("inlineCode",{parentName:"p"},"TransactionResponse"),">"),(0,r.kt)("p",null,"Approves a deposit into the L2 chain."),(0,r.kt)("h4",{id:"parameters-2"},"Parameters"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"l1Token")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("a",{parentName:"td",href:"../modules#addresslike"},(0,r.kt)("inlineCode",{parentName:"a"},"AddressLike"))),(0,r.kt)("td",{parentName:"tr",align:"left"},"The L1 token address.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"l2Token")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("a",{parentName:"td",href:"../modules#addresslike"},(0,r.kt)("inlineCode",{parentName:"a"},"AddressLike"))),(0,r.kt)("td",{parentName:"tr",align:"left"},"The L2 token address.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"amount")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("a",{parentName:"td",href:"../modules#numberlike"},(0,r.kt)("inlineCode",{parentName:"a"},"NumberLike"))),(0,r.kt)("td",{parentName:"tr",align:"left"},"Amount of the token to approve.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"opts?")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"Object")),(0,r.kt)("td",{parentName:"tr",align:"left"},"Additional options.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"opts.overrides?")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"Overrides")),(0,r.kt)("td",{parentName:"tr",align:"left"},"Optional transaction overrides.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"opts.signer?")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"Signer")),(0,r.kt)("td",{parentName:"tr",align:"left"},"Optional signer to use to send the transaction.")))),(0,r.kt)("h4",{id:"returns-5"},"Returns"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"Promise"),"<",(0,r.kt)("inlineCode",{parentName:"p"},"TransactionResponse"),">"),(0,r.kt)("p",null,"Transaction response for the approval transaction."),(0,r.kt)("h4",{id:"defined-in-17"},"Defined in"),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"https://github.com/morph-l2/sdk/tree/97c4394/src/cross-chain-messenger.ts#L1248"},"src/cross-chain-messenger.ts:1248")),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"depositerc20"},"depositERC20"),(0,r.kt)("p",null,"\u25b8 ",(0,r.kt)("strong",{parentName:"p"},"depositERC20"),"(",(0,r.kt)("inlineCode",{parentName:"p"},"l1Token"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"l2Token"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"amount"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"opts?"),"): ",(0,r.kt)("inlineCode",{parentName:"p"},"Promise"),"<",(0,r.kt)("inlineCode",{parentName:"p"},"TransactionResponse"),">"),(0,r.kt)("p",null,"Deposits some ERC20 tokens into the L2 chain."),(0,r.kt)("h4",{id:"parameters-3"},"Parameters"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"l1Token")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("a",{parentName:"td",href:"../modules#addresslike"},(0,r.kt)("inlineCode",{parentName:"a"},"AddressLike"))),(0,r.kt)("td",{parentName:"tr",align:"left"},"Address of the L1 token.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"l2Token")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("a",{parentName:"td",href:"../modules#addresslike"},(0,r.kt)("inlineCode",{parentName:"a"},"AddressLike"))),(0,r.kt)("td",{parentName:"tr",align:"left"},"Address of the L2 token.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"amount")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("a",{parentName:"td",href:"../modules#numberlike"},(0,r.kt)("inlineCode",{parentName:"a"},"NumberLike"))),(0,r.kt)("td",{parentName:"tr",align:"left"},"Amount to deposit.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"opts?")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"Object")),(0,r.kt)("td",{parentName:"tr",align:"left"},"Additional options.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"opts.l2GasLimit?")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("a",{parentName:"td",href:"../modules#numberlike"},(0,r.kt)("inlineCode",{parentName:"a"},"NumberLike"))),(0,r.kt)("td",{parentName:"tr",align:"left"},"Optional gas limit to use for the transaction on L2.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"opts.overrides?")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"Overrides")),(0,r.kt)("td",{parentName:"tr",align:"left"},"Optional transaction overrides.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"opts.recipient?")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("a",{parentName:"td",href:"../modules#addresslike"},(0,r.kt)("inlineCode",{parentName:"a"},"AddressLike"))),(0,r.kt)("td",{parentName:"tr",align:"left"},"Optional address to receive the funds on L2. Defaults to sender.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"opts.signer?")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"Signer")),(0,r.kt)("td",{parentName:"tr",align:"left"},"Optional signer to use to send the transaction.")))),(0,r.kt)("h4",{id:"returns-6"},"Returns"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"Promise"),"<",(0,r.kt)("inlineCode",{parentName:"p"},"TransactionResponse"),">"),(0,r.kt)("p",null,"Transaction response for the deposit transaction."),(0,r.kt)("h4",{id:"defined-in-18"},"Defined in"),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"https://github.com/morph-l2/sdk/tree/97c4394/src/cross-chain-messenger.ts#L1280"},"src/cross-chain-messenger.ts:1280")),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"depositeth"},"depositETH"),(0,r.kt)("p",null,"\u25b8 ",(0,r.kt)("strong",{parentName:"p"},"depositETH"),"(",(0,r.kt)("inlineCode",{parentName:"p"},"amount"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"opts?"),"): ",(0,r.kt)("inlineCode",{parentName:"p"},"Promise"),"<",(0,r.kt)("inlineCode",{parentName:"p"},"TransactionResponse"),">"),(0,r.kt)("p",null,"Deposits some ETH into the L2 chain."),(0,r.kt)("h4",{id:"parameters-4"},"Parameters"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"amount")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("a",{parentName:"td",href:"../modules#numberlike"},(0,r.kt)("inlineCode",{parentName:"a"},"NumberLike"))),(0,r.kt)("td",{parentName:"tr",align:"left"},"Amount of ETH to deposit (in wei).")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"opts?")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"Object")),(0,r.kt)("td",{parentName:"tr",align:"left"},"Additional options.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"opts.l2GasLimit?")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("a",{parentName:"td",href:"../modules#numberlike"},(0,r.kt)("inlineCode",{parentName:"a"},"NumberLike"))),(0,r.kt)("td",{parentName:"tr",align:"left"},"Optional gas limit to use for the transaction on L2.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"opts.overrides?")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"Overrides")),(0,r.kt)("td",{parentName:"tr",align:"left"},"Optional transaction overrides.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"opts.recipient?")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("a",{parentName:"td",href:"../modules#addresslike"},(0,r.kt)("inlineCode",{parentName:"a"},"AddressLike"))),(0,r.kt)("td",{parentName:"tr",align:"left"},"Optional address to receive the funds on L2. Defaults to sender.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"opts.signer?")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"Signer")),(0,r.kt)("td",{parentName:"tr",align:"left"},"Optional signer to use to send the transaction.")))),(0,r.kt)("h4",{id:"returns-7"},"Returns"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"Promise"),"<",(0,r.kt)("inlineCode",{parentName:"p"},"TransactionResponse"),">"),(0,r.kt)("p",null,"Transaction response for the deposit transaction."),(0,r.kt)("h4",{id:"defined-in-19"},"Defined in"),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"https://github.com/morph-l2/sdk/tree/97c4394/src/cross-chain-messenger.ts#L1180"},"src/cross-chain-messenger.ts:1180")),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"estimatel2messagegaslimit"},"estimateL2MessageGasLimit"),(0,r.kt)("p",null,"\u25b8 ",(0,r.kt)("strong",{parentName:"p"},"estimateL2MessageGasLimit"),"(",(0,r.kt)("inlineCode",{parentName:"p"},"message"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"opts?"),"): ",(0,r.kt)("inlineCode",{parentName:"p"},"Promise"),"<",(0,r.kt)("inlineCode",{parentName:"p"},"BigNumber"),">"),(0,r.kt)("p",null,"Estimates the amount of gas required to fully execute a given message on L2. Only applies to\nL1 => L2 messages. You would supply this gas limit when sending the message to L2."),(0,r.kt)("h4",{id:"parameters-5"},"Parameters"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"message")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("a",{parentName:"td",href:"../modules#messagerequestlike"},(0,r.kt)("inlineCode",{parentName:"a"},"MessageRequestLike"))),(0,r.kt)("td",{parentName:"tr",align:"left"},"Message get a gas estimate for.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"opts?")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"Object")),(0,r.kt)("td",{parentName:"tr",align:"left"},"Options object.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"opts.bufferPercent?")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"number")),(0,r.kt)("td",{parentName:"tr",align:"left"},"Percentage of gas to add to the estimate. Defaults to 20.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"opts.from?")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"string")),(0,r.kt)("td",{parentName:"tr",align:"left"},"Address to use as the sender.")))),(0,r.kt)("h4",{id:"returns-8"},"Returns"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"Promise"),"<",(0,r.kt)("inlineCode",{parentName:"p"},"BigNumber"),">"),(0,r.kt)("p",null,"Estimates L2 gas limit."),(0,r.kt)("h4",{id:"defined-in-20"},"Defined in"),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"https://github.com/morph-l2/sdk/tree/97c4394/src/cross-chain-messenger.ts#L875"},"src/cross-chain-messenger.ts:875")),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"estimatemessagewaittimeseconds"},"estimateMessageWaitTimeSeconds"),(0,r.kt)("p",null,"\u25b8 ",(0,r.kt)("strong",{parentName:"p"},"estimateMessageWaitTimeSeconds"),"(",(0,r.kt)("inlineCode",{parentName:"p"},"message"),"): ",(0,r.kt)("inlineCode",{parentName:"p"},"Promise"),"<",(0,r.kt)("inlineCode",{parentName:"p"},"number"),">"),(0,r.kt)("p",null,"Returns the estimated amount of time before the message can be executed. When this is a\nmessage being sent to L1, this will return the estimated time until the message will complete\nits challenge period. When this is a message being sent to L2, this will return the estimated\namount of time until the message will be picked up and executed on L2."),(0,r.kt)("h4",{id:"parameters-6"},"Parameters"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"message")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("a",{parentName:"td",href:"../modules#messagelike"},(0,r.kt)("inlineCode",{parentName:"a"},"MessageLike"))),(0,r.kt)("td",{parentName:"tr",align:"left"},"Message to estimate the time remaining for.")))),(0,r.kt)("h4",{id:"returns-9"},"Returns"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"Promise"),"<",(0,r.kt)("inlineCode",{parentName:"p"},"number"),">"),(0,r.kt)("p",null,"Estimated amount of time remaining (in seconds) before the message can be executed."),(0,r.kt)("h4",{id:"defined-in-21"},"Defined in"),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"https://github.com/morph-l2/sdk/tree/97c4394/src/cross-chain-messenger.ts#L917"},"src/cross-chain-messenger.ts:917")),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"finalizemessage"},"finalizeMessage"),(0,r.kt)("p",null,"\u25b8 ",(0,r.kt)("strong",{parentName:"p"},"finalizeMessage"),"(",(0,r.kt)("inlineCode",{parentName:"p"},"message"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"opts?"),"): ",(0,r.kt)("inlineCode",{parentName:"p"},"Promise"),"<",(0,r.kt)("inlineCode",{parentName:"p"},"TransactionResponse"),">"),(0,r.kt)("p",null,"Finalizes a cross chain message that was sent from L2 to L1. Only applicable for L2 to L1\nmessages. Will throw an error if the message has not completed its challenge period yet."),(0,r.kt)("h4",{id:"parameters-7"},"Parameters"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"message")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("a",{parentName:"td",href:"../modules#messagelike"},(0,r.kt)("inlineCode",{parentName:"a"},"MessageLike"))),(0,r.kt)("td",{parentName:"tr",align:"left"},"Message to finalize.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"opts?")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"Object")),(0,r.kt)("td",{parentName:"tr",align:"left"},"Additional options.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"opts.overrides?")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"PayableOverrides")),(0,r.kt)("td",{parentName:"tr",align:"left"},"Optional transaction overrides.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"opts.signer?")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"Signer")),(0,r.kt)("td",{parentName:"tr",align:"left"},"Optional signer to use to send the transaction.")))),(0,r.kt)("h4",{id:"returns-10"},"Returns"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"Promise"),"<",(0,r.kt)("inlineCode",{parentName:"p"},"TransactionResponse"),">"),(0,r.kt)("p",null,"Transaction response for the finalization transaction."),(0,r.kt)("h4",{id:"defined-in-22"},"Defined in"),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"https://github.com/morph-l2/sdk/tree/97c4394/src/cross-chain-messenger.ts#L1157"},"src/cross-chain-messenger.ts:1157")),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"getbackendtreesyncindex"},"getBackendTreeSyncIndex"),(0,r.kt)("p",null,"\u25b8 ",(0,r.kt)("strong",{parentName:"p"},"getBackendTreeSyncIndex"),"(): ",(0,r.kt)("inlineCode",{parentName:"p"},"Promise"),"<",(0,r.kt)("inlineCode",{parentName:"p"},"number"),">"),(0,r.kt)("h4",{id:"returns-11"},"Returns"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"Promise"),"<",(0,r.kt)("inlineCode",{parentName:"p"},"number"),">"),(0,r.kt)("h4",{id:"defined-in-23"},"Defined in"),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"https://github.com/morph-l2/sdk/tree/97c4394/src/cross-chain-messenger.ts#L1057"},"src/cross-chain-messenger.ts:1057")),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"getbridgefortokenpair"},"getBridgeForTokenPair"),(0,r.kt)("p",null,"\u25b8 ",(0,r.kt)("strong",{parentName:"p"},"getBridgeForTokenPair"),"(",(0,r.kt)("inlineCode",{parentName:"p"},"l1Token"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"l2Token"),"): ",(0,r.kt)("inlineCode",{parentName:"p"},"Promise"),"<",(0,r.kt)("a",{parentName:"p",href:"../interfaces/IBridgeAdapter"},(0,r.kt)("inlineCode",{parentName:"a"},"IBridgeAdapter")),">"),(0,r.kt)("h4",{id:"parameters-8"},"Parameters"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"l1Token")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("a",{parentName:"td",href:"../modules#addresslike"},(0,r.kt)("inlineCode",{parentName:"a"},"AddressLike"))),(0,r.kt)("td",{parentName:"tr",align:"left"},"L1 token address.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"l2Token")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("a",{parentName:"td",href:"../modules#addresslike"},(0,r.kt)("inlineCode",{parentName:"a"},"AddressLike"))),(0,r.kt)("td",{parentName:"tr",align:"left"},"L2 token address.")))),(0,r.kt)("h4",{id:"returns-12"},"Returns"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"Promise"),"<",(0,r.kt)("a",{parentName:"p",href:"../interfaces/IBridgeAdapter"},(0,r.kt)("inlineCode",{parentName:"a"},"IBridgeAdapter")),">"),(0,r.kt)("p",null,"The appropriate bridge adapter for the given token pair."),(0,r.kt)("h4",{id:"defined-in-24"},"Defined in"),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"https://github.com/morph-l2/sdk/tree/97c4394/src/cross-chain-messenger.ts#L455"},"src/cross-chain-messenger.ts:455")),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"getchallengeperiodseconds"},"getChallengePeriodSeconds"),(0,r.kt)("p",null,"\u25b8 ",(0,r.kt)("strong",{parentName:"p"},"getChallengePeriodSeconds"),"(): ",(0,r.kt)("inlineCode",{parentName:"p"},"Promise"),"<",(0,r.kt)("inlineCode",{parentName:"p"},"number"),">"),(0,r.kt)("p",null,"Queries the current challenge period in seconds from the StateCommitmentChain."),(0,r.kt)("h4",{id:"returns-13"},"Returns"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"Promise"),"<",(0,r.kt)("inlineCode",{parentName:"p"},"number"),">"),(0,r.kt)("p",null,"Current challenge period in seconds."),(0,r.kt)("h4",{id:"defined-in-25"},"Defined in"),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"https://github.com/morph-l2/sdk/tree/97c4394/src/cross-chain-messenger.ts#L980"},"src/cross-chain-messenger.ts:980")),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"getdepositsbyaddress"},"getDepositsByAddress"),(0,r.kt)("p",null,"\u25b8 ",(0,r.kt)("strong",{parentName:"p"},"getDepositsByAddress"),"(",(0,r.kt)("inlineCode",{parentName:"p"},"address"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"opts?"),"): ",(0,r.kt)("inlineCode",{parentName:"p"},"Promise"),"<",(0,r.kt)("a",{parentName:"p",href:"../interfaces/TokenBridgeMessage"},(0,r.kt)("inlineCode",{parentName:"a"},"TokenBridgeMessage")),"[]",">"),(0,r.kt)("p",null,"Gets all deposits for a given address."),(0,r.kt)("h4",{id:"parameters-9"},"Parameters"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"address")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("a",{parentName:"td",href:"../modules#addresslike"},(0,r.kt)("inlineCode",{parentName:"a"},"AddressLike"))),(0,r.kt)("td",{parentName:"tr",align:"left"},"Address to search for messages from.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"opts")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"Object")),(0,r.kt)("td",{parentName:"tr",align:"left"},"Options object.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"opts.fromBlock?")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"BlockTag")),(0,r.kt)("td",{parentName:"tr",align:"left"},"Block to start searching for messages from. If not provided, will start from the first block (block #0).")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"opts.toBlock?")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"BlockTag")),(0,r.kt)("td",{parentName:"tr",align:"left"},'Block to stop searching for messages at. If not provided, will stop at the latest known block ("latest").')))),(0,r.kt)("h4",{id:"returns-14"},"Returns"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"Promise"),"<",(0,r.kt)("a",{parentName:"p",href:"../interfaces/TokenBridgeMessage"},(0,r.kt)("inlineCode",{parentName:"a"},"TokenBridgeMessage")),"[]",">"),(0,r.kt)("p",null,"All deposit token bridge messages sent by the given address."),(0,r.kt)("h4",{id:"defined-in-26"},"Defined in"),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"https://github.com/morph-l2/sdk/tree/97c4394/src/cross-chain-messenger.ts#L488"},"src/cross-chain-messenger.ts:488")),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"getmessagereceipt"},"getMessageReceipt"),(0,r.kt)("p",null,"\u25b8 ",(0,r.kt)("strong",{parentName:"p"},"getMessageReceipt"),"(",(0,r.kt)("inlineCode",{parentName:"p"},"message"),"): ",(0,r.kt)("inlineCode",{parentName:"p"},"Promise"),"<",(0,r.kt)("a",{parentName:"p",href:"../interfaces/MessageReceipt"},(0,r.kt)("inlineCode",{parentName:"a"},"MessageReceipt")),">"),(0,r.kt)("p",null,"Finds the receipt of the transaction that executed a particular cross chain message."),(0,r.kt)("h4",{id:"parameters-10"},"Parameters"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"message")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("a",{parentName:"td",href:"../modules#messagelike"},(0,r.kt)("inlineCode",{parentName:"a"},"MessageLike"))),(0,r.kt)("td",{parentName:"tr",align:"left"},"Message to find the receipt of.")))),(0,r.kt)("h4",{id:"returns-15"},"Returns"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"Promise"),"<",(0,r.kt)("a",{parentName:"p",href:"../interfaces/MessageReceipt"},(0,r.kt)("inlineCode",{parentName:"a"},"MessageReceipt")),">"),(0,r.kt)("p",null,"CrossChainMessage receipt including receipt of the transaction that relayed the\ngiven message."),(0,r.kt)("h4",{id:"defined-in-27"},"Defined in"),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"https://github.com/morph-l2/sdk/tree/97c4394/src/cross-chain-messenger.ts#L683"},"src/cross-chain-messenger.ts:683")),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"getmessagestatus"},"getMessageStatus"),(0,r.kt)("p",null,"\u25b8 ",(0,r.kt)("strong",{parentName:"p"},"getMessageStatus"),"(",(0,r.kt)("inlineCode",{parentName:"p"},"message"),"): ",(0,r.kt)("inlineCode",{parentName:"p"},"Promise"),"<",(0,r.kt)("a",{parentName:"p",href:"../enums/MessageStatus"},(0,r.kt)("inlineCode",{parentName:"a"},"MessageStatus")),">"),(0,r.kt)("p",null,"Retrieves the status of a particular message as an enum."),(0,r.kt)("h4",{id:"parameters-11"},"Parameters"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"message")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("a",{parentName:"td",href:"../modules#messagelike"},(0,r.kt)("inlineCode",{parentName:"a"},"MessageLike"))),(0,r.kt)("td",{parentName:"tr",align:"left"},"Cross chain message to check the status of.")))),(0,r.kt)("h4",{id:"returns-16"},"Returns"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"Promise"),"<",(0,r.kt)("a",{parentName:"p",href:"../enums/MessageStatus"},(0,r.kt)("inlineCode",{parentName:"a"},"MessageStatus")),">"),(0,r.kt)("p",null,"Status of the message."),(0,r.kt)("h4",{id:"defined-in-28"},"Defined in"),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"https://github.com/morph-l2/sdk/tree/97c4394/src/cross-chain-messenger.ts#L617"},"src/cross-chain-messenger.ts:617")),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"getmessagesbytransaction"},"getMessagesByTransaction"),(0,r.kt)("p",null,"\u25b8 ",(0,r.kt)("strong",{parentName:"p"},"getMessagesByTransaction"),"(",(0,r.kt)("inlineCode",{parentName:"p"},"transaction"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"opts?"),"): ",(0,r.kt)("inlineCode",{parentName:"p"},"Promise"),"<",(0,r.kt)("a",{parentName:"p",href:"../interfaces/CrossChainMessage"},(0,r.kt)("inlineCode",{parentName:"a"},"CrossChainMessage")),"[]"),(0,r.kt)("p",null,"Retrieves all cross chain messages sent within a given transaction."),(0,r.kt)("h4",{id:"parameters-12"},"Parameters"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"transaction")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("a",{parentName:"td",href:"../modules#transactionlike"},(0,r.kt)("inlineCode",{parentName:"a"},"TransactionLike"))),(0,r.kt)("td",{parentName:"tr",align:"left"},"Transaction hash or receipt to find messages from.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"opts")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"Object")),(0,r.kt)("td",{parentName:"tr",align:"left"},"Options object.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"opts.direction?")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("a",{parentName:"td",href:"../enums/MessageDirection"},(0,r.kt)("inlineCode",{parentName:"a"},"MessageDirection"))),(0,r.kt)("td",{parentName:"tr",align:"left"},"Direction to search for messages in. If not provided, will attempt to automatically search both directions under the assumption that a transaction hash will only exist on one chain. If the hash exists on both chains, will throw an error.")))),(0,r.kt)("h4",{id:"returns-17"},"Returns"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"Promise"),"<",(0,r.kt)("a",{parentName:"p",href:"../interfaces/CrossChainMessage"},(0,r.kt)("inlineCode",{parentName:"a"},"CrossChainMessage")),"[]",">"),(0,r.kt)("p",null,"All cross chain messages sent within the transaction."),(0,r.kt)("h4",{id:"defined-in-29"},"Defined in"),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"https://github.com/morph-l2/sdk/tree/97c4394/src/cross-chain-messenger.ts#L234"},"src/cross-chain-messenger.ts:234")),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"getprovenwithdrawal"},"getProvenWithdrawal"),(0,r.kt)("p",null,"\u25b8 ",(0,r.kt)("strong",{parentName:"p"},"getProvenWithdrawal"),"(",(0,r.kt)("inlineCode",{parentName:"p"},"withdrawalHash"),"): ",(0,r.kt)("inlineCode",{parentName:"p"},"Promise"),"<",(0,r.kt)("a",{parentName:"p",href:"../interfaces/ProvenWithdrawal"},(0,r.kt)("inlineCode",{parentName:"a"},"ProvenWithdrawal")),">"),(0,r.kt)("p",null,"Queries the MorphPortal contract's ",(0,r.kt)("inlineCode",{parentName:"p"},"provenWithdrawals")," mapping\nfor a ProvenWithdrawal that matches the passed withdrawalHash"),(0,r.kt)("h4",{id:"parameters-13"},"Parameters"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Type"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"withdrawalHash")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"string"))))),(0,r.kt)("h4",{id:"returns-18"},"Returns"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"Promise"),"<",(0,r.kt)("a",{parentName:"p",href:"../interfaces/ProvenWithdrawal"},(0,r.kt)("inlineCode",{parentName:"a"},"ProvenWithdrawal")),">"),(0,r.kt)("p",null,"A ProvenWithdrawal object"),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},(0,r.kt)("inlineCode",{parentName:"strong"},"Bedrock"))),(0,r.kt)("p",null,"Note: This function is bedrock-specific."),(0,r.kt)("h4",{id:"defined-in-30"},"Defined in"),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"https://github.com/morph-l2/sdk/tree/97c4394/src/cross-chain-messenger.ts#L995"},"src/cross-chain-messenger.ts:995")),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"getwithdrawmessageproof"},"getWithdrawMessageProof"),(0,r.kt)("p",null,"\u25b8 ",(0,r.kt)("strong",{parentName:"p"},"getWithdrawMessageProof"),"(",(0,r.kt)("inlineCode",{parentName:"p"},"message"),"): ",(0,r.kt)("inlineCode",{parentName:"p"},"Promise"),"<",(0,r.kt)("a",{parentName:"p",href:"../interfaces/WithdrawMessageProof"},(0,r.kt)("inlineCode",{parentName:"a"},"WithdrawMessageProof")),">"),(0,r.kt)("p",null,"Generates the bedrock proof required to finalize an L2 to L1 message."),(0,r.kt)("h4",{id:"parameters-14"},"Parameters"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"message")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("a",{parentName:"td",href:"../modules#messagelike"},(0,r.kt)("inlineCode",{parentName:"a"},"MessageLike"))),(0,r.kt)("td",{parentName:"tr",align:"left"},"Message to generate a proof for.")))),(0,r.kt)("h4",{id:"returns-19"},"Returns"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"Promise"),"<",(0,r.kt)("a",{parentName:"p",href:"../interfaces/WithdrawMessageProof"},(0,r.kt)("inlineCode",{parentName:"a"},"WithdrawMessageProof")),">"),(0,r.kt)("p",null,"Proof that can be used to finalize the message."),(0,r.kt)("h4",{id:"defined-in-31"},"Defined in"),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"https://github.com/morph-l2/sdk/tree/97c4394/src/cross-chain-messenger.ts#L1007"},"src/cross-chain-messenger.ts:1007")),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"getwithdrawalsbyaddress"},"getWithdrawalsByAddress"),(0,r.kt)("p",null,"\u25b8 ",(0,r.kt)("strong",{parentName:"p"},"getWithdrawalsByAddress"),"(",(0,r.kt)("inlineCode",{parentName:"p"},"address"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"opts?"),"): ",(0,r.kt)("inlineCode",{parentName:"p"},"Promise"),"<",(0,r.kt)("a",{parentName:"p",href:"../interfaces/TokenBridgeMessage"},(0,r.kt)("inlineCode",{parentName:"a"},"TokenBridgeMessage")),"[]",">"),(0,r.kt)("p",null,"Gets all withdrawals for a given address."),(0,r.kt)("h4",{id:"parameters-15"},"Parameters"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"address")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("a",{parentName:"td",href:"../modules#addresslike"},(0,r.kt)("inlineCode",{parentName:"a"},"AddressLike"))),(0,r.kt)("td",{parentName:"tr",align:"left"},"Address to search for messages from.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"opts")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"Object")),(0,r.kt)("td",{parentName:"tr",align:"left"},"Options object.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"opts.fromBlock?")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"BlockTag")),(0,r.kt)("td",{parentName:"tr",align:"left"},"Block to start searching for messages from. If not provided, will start from the first block (block #0).")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"opts.toBlock?")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"BlockTag")),(0,r.kt)("td",{parentName:"tr",align:"left"},'Block to stop searching for messages at. If not provided, will stop at the latest known block ("latest").')))),(0,r.kt)("h4",{id:"returns-20"},"Returns"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"Promise"),"<",(0,r.kt)("a",{parentName:"p",href:"../interfaces/TokenBridgeMessage"},(0,r.kt)("inlineCode",{parentName:"a"},"TokenBridgeMessage")),"[]",">"),(0,r.kt)("p",null,"All withdrawal token bridge messages sent by the given address."),(0,r.kt)("h4",{id:"defined-in-32"},"Defined in"),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"https://github.com/morph-l2/sdk/tree/97c4394/src/cross-chain-messenger.ts#L522"},"src/cross-chain-messenger.ts:522")),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"provemessage"},"proveMessage"),(0,r.kt)("p",null,"\u25b8 ",(0,r.kt)("strong",{parentName:"p"},"proveMessage"),"(",(0,r.kt)("inlineCode",{parentName:"p"},"message"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"opts?"),"): ",(0,r.kt)("inlineCode",{parentName:"p"},"Promise"),"<",(0,r.kt)("inlineCode",{parentName:"p"},"TransactionResponse"),">"),(0,r.kt)("p",null,"Proves a cross chain message that was sent from L2 to L1. Only applicable for L2 to L1\nmessages."),(0,r.kt)("h4",{id:"parameters-16"},"Parameters"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"message")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("a",{parentName:"td",href:"../modules#messagelike"},(0,r.kt)("inlineCode",{parentName:"a"},"MessageLike"))),(0,r.kt)("td",{parentName:"tr",align:"left"},"Message to finalize.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"opts?")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"Object")),(0,r.kt)("td",{parentName:"tr",align:"left"},"Additional options.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"opts.overrides?")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"Overrides")),(0,r.kt)("td",{parentName:"tr",align:"left"},"Optional transaction overrides.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"opts.signer?")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"Signer")),(0,r.kt)("td",{parentName:"tr",align:"left"},"Optional signer to use to send the transaction.")))),(0,r.kt)("h4",{id:"returns-21"},"Returns"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"Promise"),"<",(0,r.kt)("inlineCode",{parentName:"p"},"TransactionResponse"),">"),(0,r.kt)("p",null,"Transaction response for the finalization transaction."),(0,r.kt)("h4",{id:"defined-in-33"},"Defined in"),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"https://github.com/morph-l2/sdk/tree/97c4394/src/cross-chain-messenger.ts#L1136"},"src/cross-chain-messenger.ts:1136")),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"resendmessage"},"resendMessage"),(0,r.kt)("p",null,"\u25b8 ",(0,r.kt)("strong",{parentName:"p"},"resendMessage"),"(",(0,r.kt)("inlineCode",{parentName:"p"},"message"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"messageGasLimit"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"opts?"),"): ",(0,r.kt)("inlineCode",{parentName:"p"},"Promise"),"<",(0,r.kt)("inlineCode",{parentName:"p"},"TransactionResponse"),">"),(0,r.kt)("p",null,"Resends a given cross chain message with a different gas limit. Only applies to L1 to L2\nmessages. If provided an L2 to L1 message, this function will throw an error."),(0,r.kt)("h4",{id:"parameters-17"},"Parameters"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"message")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("a",{parentName:"td",href:"../modules#messagelike"},(0,r.kt)("inlineCode",{parentName:"a"},"MessageLike"))),(0,r.kt)("td",{parentName:"tr",align:"left"},"Cross chain message to resend.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"messageGasLimit")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("a",{parentName:"td",href:"../modules#numberlike"},(0,r.kt)("inlineCode",{parentName:"a"},"NumberLike"))),(0,r.kt)("td",{parentName:"tr",align:"left"},"New gas limit to use for the message.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"opts?")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"Object")),(0,r.kt)("td",{parentName:"tr",align:"left"},"Additional options.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"opts.overrides?")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"Overrides")),(0,r.kt)("td",{parentName:"tr",align:"left"},"Optional transaction overrides.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"opts.signer?")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"Signer")),(0,r.kt)("td",{parentName:"tr",align:"left"},"Optional signer to use to send the transaction.")))),(0,r.kt)("h4",{id:"returns-22"},"Returns"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"Promise"),"<",(0,r.kt)("inlineCode",{parentName:"p"},"TransactionResponse"),">"),(0,r.kt)("p",null,"Transaction response for the message resending transaction."),(0,r.kt)("h4",{id:"defined-in-34"},"Defined in"),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"https://github.com/morph-l2/sdk/tree/97c4394/src/cross-chain-messenger.ts#L1109"},"src/cross-chain-messenger.ts:1109")),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"sendmessage"},"sendMessage"),(0,r.kt)("p",null,"\u25b8 ",(0,r.kt)("strong",{parentName:"p"},"sendMessage"),"(",(0,r.kt)("inlineCode",{parentName:"p"},"message"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"opts?"),"): ",(0,r.kt)("inlineCode",{parentName:"p"},"Promise"),"<",(0,r.kt)("inlineCode",{parentName:"p"},"TransactionResponse"),">"),(0,r.kt)("p",null,"Sends a given cross chain message. Where the message is sent depends on the direction attached\nto the message itself."),(0,r.kt)("h4",{id:"parameters-18"},"Parameters"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"message")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("a",{parentName:"td",href:"../interfaces/CrossChainMessageRequest"},(0,r.kt)("inlineCode",{parentName:"a"},"CrossChainMessageRequest"))),(0,r.kt)("td",{parentName:"tr",align:"left"},"Cross chain message to send.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"opts?")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"Object")),(0,r.kt)("td",{parentName:"tr",align:"left"},"Additional options.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"opts.l2GasLimit?")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("a",{parentName:"td",href:"../modules#numberlike"},(0,r.kt)("inlineCode",{parentName:"a"},"NumberLike"))),(0,r.kt)("td",{parentName:"tr",align:"left"},"Optional gas limit to use for the transaction on L2.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"opts.overrides?")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"Overrides")),(0,r.kt)("td",{parentName:"tr",align:"left"},"Optional transaction overrides.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"opts.signer?")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"Signer")),(0,r.kt)("td",{parentName:"tr",align:"left"},"Optional signer to use to send the transaction.")))),(0,r.kt)("h4",{id:"returns-23"},"Returns"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"Promise"),"<",(0,r.kt)("inlineCode",{parentName:"p"},"TransactionResponse"),">"),(0,r.kt)("p",null,"Transaction response for the message sending transaction."),(0,r.kt)("h4",{id:"defined-in-35"},"Defined in"),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"https://github.com/morph-l2/sdk/tree/97c4394/src/cross-chain-messenger.ts#L1082"},"src/cross-chain-messenger.ts:1082")),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"tobedrockcrosschainmessage"},"toBedrockCrossChainMessage"),(0,r.kt)("p",null,"\u25b8 ",(0,r.kt)("strong",{parentName:"p"},"toBedrockCrossChainMessage"),"(",(0,r.kt)("inlineCode",{parentName:"p"},"message"),"): ",(0,r.kt)("inlineCode",{parentName:"p"},"Promise"),"<",(0,r.kt)("a",{parentName:"p",href:"../interfaces/CrossChainMessage"},(0,r.kt)("inlineCode",{parentName:"a"},"CrossChainMessage")),">"),(0,r.kt)("p",null,"Transforms a legacy message into its corresponding Bedrock representation."),(0,r.kt)("h4",{id:"parameters-19"},"Parameters"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"message")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("a",{parentName:"td",href:"../modules#messagelike"},(0,r.kt)("inlineCode",{parentName:"a"},"MessageLike"))),(0,r.kt)("td",{parentName:"tr",align:"left"},"Legacy message to transform.")))),(0,r.kt)("h4",{id:"returns-24"},"Returns"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"Promise"),"<",(0,r.kt)("a",{parentName:"p",href:"../interfaces/CrossChainMessage"},(0,r.kt)("inlineCode",{parentName:"a"},"CrossChainMessage")),">"),(0,r.kt)("p",null,"Bedrock representation of the message."),(0,r.kt)("h4",{id:"defined-in-36"},"Defined in"),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"https://github.com/morph-l2/sdk/tree/97c4394/src/cross-chain-messenger.ts#L324"},"src/cross-chain-messenger.ts:324")),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"tocrosschainmessage"},"toCrossChainMessage"),(0,r.kt)("p",null,"\u25b8 ",(0,r.kt)("strong",{parentName:"p"},"toCrossChainMessage"),"(",(0,r.kt)("inlineCode",{parentName:"p"},"message"),"): ",(0,r.kt)("inlineCode",{parentName:"p"},"Promise"),"<",(0,r.kt)("a",{parentName:"p",href:"../interfaces/CrossChainMessage"},(0,r.kt)("inlineCode",{parentName:"a"},"CrossChainMessage")),">"),(0,r.kt)("p",null,"Resolves a MessageLike into a CrossChainMessage object.\nUnlike other coercion functions, this function is stateful and requires making additional\nrequests. For now I'm going to keep this function here, but we could consider putting a\nsimilar function inside of utils/coercion.ts if people want to use this without having to\ncreate an entire CrossChainProvider object."),(0,r.kt)("h4",{id:"parameters-20"},"Parameters"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"message")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("a",{parentName:"td",href:"../modules#messagelike"},(0,r.kt)("inlineCode",{parentName:"a"},"MessageLike"))),(0,r.kt)("td",{parentName:"tr",align:"left"},"MessageLike to resolve into a CrossChainMessage.")))),(0,r.kt)("h4",{id:"returns-25"},"Returns"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"Promise"),"<",(0,r.kt)("a",{parentName:"p",href:"../interfaces/CrossChainMessage"},(0,r.kt)("inlineCode",{parentName:"a"},"CrossChainMessage")),">"),(0,r.kt)("p",null,"Message coerced into a CrossChainMessage."),(0,r.kt)("h4",{id:"defined-in-37"},"Defined in"),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"https://github.com/morph-l2/sdk/tree/97c4394/src/cross-chain-messenger.ts#L555"},"src/cross-chain-messenger.ts:555")),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"tolowlevelmessage"},"toLowLevelMessage"),(0,r.kt)("p",null,"\u25b8 ",(0,r.kt)("strong",{parentName:"p"},"toLowLevelMessage"),"(",(0,r.kt)("inlineCode",{parentName:"p"},"message"),"): ",(0,r.kt)("inlineCode",{parentName:"p"},"Promise"),"<",(0,r.kt)("a",{parentName:"p",href:"../interfaces/CoreCrossChainMessage"},(0,r.kt)("inlineCode",{parentName:"a"},"CoreCrossChainMessage")),">"),(0,r.kt)("p",null,"Transforms a CrossChainMessenger message into its low-level representation inside the\nL2ToL1MessagePasser contract on L2."),(0,r.kt)("h4",{id:"parameters-21"},"Parameters"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"message")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("a",{parentName:"td",href:"../modules#messagelike"},(0,r.kt)("inlineCode",{parentName:"a"},"MessageLike"))),(0,r.kt)("td",{parentName:"tr",align:"left"},"Message to transform.")))),(0,r.kt)("h4",{id:"returns-26"},"Returns"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"Promise"),"<",(0,r.kt)("a",{parentName:"p",href:"../interfaces/CoreCrossChainMessage"},(0,r.kt)("inlineCode",{parentName:"a"},"CoreCrossChainMessage")),">"),(0,r.kt)("p",null,"Transformed message."),(0,r.kt)("h4",{id:"defined-in-38"},"Defined in"),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"https://github.com/morph-l2/sdk/tree/97c4394/src/cross-chain-messenger.ts#L370"},"src/cross-chain-messenger.ts:370")),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"waitformessagereceipt"},"waitForMessageReceipt"),(0,r.kt)("p",null,"\u25b8 ",(0,r.kt)("strong",{parentName:"p"},"waitForMessageReceipt"),"(",(0,r.kt)("inlineCode",{parentName:"p"},"message"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"opts?"),"): ",(0,r.kt)("inlineCode",{parentName:"p"},"Promise"),"<",(0,r.kt)("a",{parentName:"p",href:"../interfaces/MessageReceipt"},(0,r.kt)("inlineCode",{parentName:"a"},"MessageReceipt")),">"),(0,r.kt)("p",null,"Waits for a message to be executed and returns the receipt of the transaction that executed\nthe given message."),(0,r.kt)("h4",{id:"parameters-22"},"Parameters"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"message")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("a",{parentName:"td",href:"../modules#messagelike"},(0,r.kt)("inlineCode",{parentName:"a"},"MessageLike"))),(0,r.kt)("td",{parentName:"tr",align:"left"},"Message to wait for.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"opts")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"Object")),(0,r.kt)("td",{parentName:"tr",align:"left"},"Options to pass to the waiting function.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"opts.confirmations?")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"number")),(0,r.kt)("td",{parentName:"tr",align:"left"},"Number of transaction confirmations to wait for before returning.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"opts.pollIntervalMs?")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"number")),(0,r.kt)("td",{parentName:"tr",align:"left"},"Number of milliseconds to wait between polling for the receipt.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"opts.timeoutMs?")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"number")),(0,r.kt)("td",{parentName:"tr",align:"left"},"Milliseconds to wait before timing out.")))),(0,r.kt)("h4",{id:"returns-27"},"Returns"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"Promise"),"<",(0,r.kt)("a",{parentName:"p",href:"../interfaces/MessageReceipt"},(0,r.kt)("inlineCode",{parentName:"a"},"MessageReceipt")),">"),(0,r.kt)("p",null,"CrossChainMessage receipt including receipt of the transaction that relayed the\ngiven message."),(0,r.kt)("h4",{id:"defined-in-39"},"Defined in"),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"https://github.com/morph-l2/sdk/tree/97c4394/src/cross-chain-messenger.ts#L760"},"src/cross-chain-messenger.ts:760")),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"waitformessagestatus"},"waitForMessageStatus"),(0,r.kt)("p",null,"\u25b8 ",(0,r.kt)("strong",{parentName:"p"},"waitForMessageStatus"),"(",(0,r.kt)("inlineCode",{parentName:"p"},"message"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"status"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"opts?"),"): ",(0,r.kt)("inlineCode",{parentName:"p"},"Promise"),"<",(0,r.kt)("inlineCode",{parentName:"p"},"void"),">"),(0,r.kt)("p",null,"Waits until the status of a given message changes to the expected status. Note that if the\nstatus of the given message changes to a status that implies the expected status, this will\nstill return. If the status of the message changes to a status that exclues the expected\nstatus, this will throw an error."),(0,r.kt)("h4",{id:"parameters-23"},"Parameters"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"message")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("a",{parentName:"td",href:"../modules#messagelike"},(0,r.kt)("inlineCode",{parentName:"a"},"MessageLike"))),(0,r.kt)("td",{parentName:"tr",align:"left"},"Message to wait for.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"status")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("a",{parentName:"td",href:"../enums/MessageStatus"},(0,r.kt)("inlineCode",{parentName:"a"},"MessageStatus"))),(0,r.kt)("td",{parentName:"tr",align:"left"},"Expected status of the message.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"opts")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"Object")),(0,r.kt)("td",{parentName:"tr",align:"left"},"Options to pass to the waiting function.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"opts.pollIntervalMs?")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"number")),(0,r.kt)("td",{parentName:"tr",align:"left"},"Number of milliseconds to wait when polling.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"opts.timeoutMs?")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"number")),(0,r.kt)("td",{parentName:"tr",align:"left"},"Milliseconds to wait before timing out.")))),(0,r.kt)("h4",{id:"returns-28"},"Returns"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"Promise"),"<",(0,r.kt)("inlineCode",{parentName:"p"},"void"),">"),(0,r.kt)("h4",{id:"defined-in-40"},"Defined in"),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"https://github.com/morph-l2/sdk/tree/97c4394/src/cross-chain-messenger.ts#L798"},"src/cross-chain-messenger.ts:798")),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"withdrawerc20"},"withdrawERC20"),(0,r.kt)("p",null,"\u25b8 ",(0,r.kt)("strong",{parentName:"p"},"withdrawERC20"),"(",(0,r.kt)("inlineCode",{parentName:"p"},"l1Token"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"l2Token"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"amount"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"opts?"),"): ",(0,r.kt)("inlineCode",{parentName:"p"},"Promise"),"<",(0,r.kt)("inlineCode",{parentName:"p"},"TransactionResponse"),">"),(0,r.kt)("p",null,"Withdraws some ERC20 tokens back to the L1 chain."),(0,r.kt)("h4",{id:"parameters-24"},"Parameters"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"l1Token")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("a",{parentName:"td",href:"../modules#addresslike"},(0,r.kt)("inlineCode",{parentName:"a"},"AddressLike"))),(0,r.kt)("td",{parentName:"tr",align:"left"},"Address of the L1 token.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"l2Token")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("a",{parentName:"td",href:"../modules#addresslike"},(0,r.kt)("inlineCode",{parentName:"a"},"AddressLike"))),(0,r.kt)("td",{parentName:"tr",align:"left"},"Address of the L2 token.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"amount")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("a",{parentName:"td",href:"../modules#numberlike"},(0,r.kt)("inlineCode",{parentName:"a"},"NumberLike"))),(0,r.kt)("td",{parentName:"tr",align:"left"},"Amount to withdraw.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"opts?")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"Object")),(0,r.kt)("td",{parentName:"tr",align:"left"},"Additional options.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"opts.overrides?")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"Overrides")),(0,r.kt)("td",{parentName:"tr",align:"left"},"Optional transaction overrides.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"opts.recipient?")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("a",{parentName:"td",href:"../modules#addresslike"},(0,r.kt)("inlineCode",{parentName:"a"},"AddressLike"))),(0,r.kt)("td",{parentName:"tr",align:"left"},"Optional address to receive the funds on L1. Defaults to sender.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"opts.signer?")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"Signer")),(0,r.kt)("td",{parentName:"tr",align:"left"},"Optional signer to use to send the transaction.")))),(0,r.kt)("h4",{id:"returns-29"},"Returns"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"Promise"),"<",(0,r.kt)("inlineCode",{parentName:"p"},"TransactionResponse"),">"),(0,r.kt)("p",null,"Transaction response for the withdraw transaction."),(0,r.kt)("h4",{id:"defined-in-41"},"Defined in"),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"https://github.com/morph-l2/sdk/tree/97c4394/src/cross-chain-messenger.ts#L1313"},"src/cross-chain-messenger.ts:1313")),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"withdraweth"},"withdrawETH"),(0,r.kt)("p",null,"\u25b8 ",(0,r.kt)("strong",{parentName:"p"},"withdrawETH"),"(",(0,r.kt)("inlineCode",{parentName:"p"},"amount"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"opts?"),"): ",(0,r.kt)("inlineCode",{parentName:"p"},"Promise"),"<",(0,r.kt)("inlineCode",{parentName:"p"},"TransactionResponse"),">"),(0,r.kt)("p",null,"Withdraws some ETH back to the L1 chain."),(0,r.kt)("h4",{id:"parameters-25"},"Parameters"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"amount")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("a",{parentName:"td",href:"../modules#numberlike"},(0,r.kt)("inlineCode",{parentName:"a"},"NumberLike"))),(0,r.kt)("td",{parentName:"tr",align:"left"},"Amount of ETH to withdraw.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"opts?")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"Object")),(0,r.kt)("td",{parentName:"tr",align:"left"},"Additional options.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"opts.overrides?")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"Overrides")),(0,r.kt)("td",{parentName:"tr",align:"left"},"Optional transaction overrides.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"opts.recipient?")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("a",{parentName:"td",href:"../modules#addresslike"},(0,r.kt)("inlineCode",{parentName:"a"},"AddressLike"))),(0,r.kt)("td",{parentName:"tr",align:"left"},"Optional address to receive the funds on L1. Defaults to sender.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"opts.signer?")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"Signer")),(0,r.kt)("td",{parentName:"tr",align:"left"},"Optional signer to use to send the transaction.")))),(0,r.kt)("h4",{id:"returns-30"},"Returns"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"Promise"),"<",(0,r.kt)("inlineCode",{parentName:"p"},"TransactionResponse"),">"),(0,r.kt)("p",null,"Transaction response for the withdraw transaction."),(0,r.kt)("h4",{id:"defined-in-42"},"Defined in"),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"https://github.com/morph-l2/sdk/tree/97c4394/src/cross-chain-messenger.ts#L1204"},"src/cross-chain-messenger.ts:1204")))}k.isMDXComponent=!0}}]);