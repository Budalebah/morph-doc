"use strict";(self.webpackChunkmorph_doc=self.webpackChunkmorph_doc||[]).push([[838],{9613:(e,t,a)=>{a.d(t,{Zo:()=>o,kt:()=>N});var r=a(9496);function n(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function i(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,r)}return a}function l(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?i(Object(a),!0).forEach((function(t){n(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):i(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function s(e,t){if(null==e)return{};var a,r,n=function(e,t){if(null==e)return{};var a,r,n={},i=Object.keys(e);for(r=0;r<i.length;r++)a=i[r],t.indexOf(a)>=0||(n[a]=e[a]);return n}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)a=i[r],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(n[a]=e[a])}return n}var p=r.createContext({}),d=function(e){var t=r.useContext(p),a=t;return e&&(a="function"==typeof e?e(t):l(l({},t),e)),a},o=function(e){var t=d(e.components);return r.createElement(p.Provider,{value:t},e.children)},k="mdxType",m={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},u=r.forwardRef((function(e,t){var a=e.components,n=e.mdxType,i=e.originalType,p=e.parentName,o=s(e,["components","mdxType","originalType","parentName"]),k=d(a),u=n,N=k["".concat(p,".").concat(u)]||k[u]||m[u]||i;return a?r.createElement(N,l(l({ref:t},o),{},{components:a})):r.createElement(N,l({ref:t},o))}));function N(e,t){var a=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var i=a.length,l=new Array(i);l[0]=u;var s={};for(var p in t)hasOwnProperty.call(t,p)&&(s[p]=t[p]);s.originalType=e,s[k]="string"==typeof e?e:n,l[1]=s;for(var d=2;d<i;d++)l[d]=a[d];return r.createElement.apply(null,l)}return r.createElement.apply(null,a)}u.displayName="MDXCreateElement"},2752:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>p,contentTitle:()=>l,default:()=>m,frontMatter:()=>i,metadata:()=>s,toc:()=>d});var r=a(8063),n=(a(9496),a(9613));const i={},l=void 0,s={unversionedId:"build-on-morph/sdk/modules",id:"build-on-morph/sdk/modules",title:"modules",description:"@morph-l2/sdk / Exports",source:"@site/docs/build-on-morph/sdk/modules.md",sourceDirName:"build-on-morph/sdk",slug:"/build-on-morph/sdk/modules",permalink:"/docs/build-on-morph/sdk/modules",draft:!1,editUrl:"https://github.com/morph-l2/morph-doc/tree/main/docs/build-on-morph/sdk/modules.md",tags:[],version:"current",frontMatter:{},sidebar:"DevSidebar",previous:{title:"intro",permalink:"/docs/build-on-morph/sdk/intro"}},p={},d=[{value:"Table of contents",id:"table-of-contents",level:2},{value:"Enumerations",id:"enumerations",level:3},{value:"Classes",id:"classes",level:3},{value:"Interfaces",id:"interfaces",level:3},{value:"Type Aliases",id:"type-aliases",level:3},{value:"Variables",id:"variables",level:3},{value:"Functions",id:"functions",level:3},{value:"Type Aliases",id:"type-aliases-1",level:2},{value:"AddressLike",id:"addresslike",level:3},{value:"Defined in",id:"defined-in",level:4},{value:"DeepPartial",id:"deeppartial",level:3},{value:"Type parameters",id:"type-parameters",level:4},{value:"Defined in",id:"defined-in-1",level:4},{value:"L2Provider",id:"l2provider",level:3},{value:"Type parameters",id:"type-parameters-1",level:4},{value:"Defined in",id:"defined-in-2",level:4},{value:"LowLevelMessage",id:"lowlevelmessage",level:3},{value:"Defined in",id:"defined-in-3",level:4},{value:"MessageLike",id:"messagelike",level:3},{value:"Defined in",id:"defined-in-4",level:4},{value:"MessageRequestLike",id:"messagerequestlike",level:3},{value:"Defined in",id:"defined-in-5",level:4},{value:"NumberLike",id:"numberlike",level:3},{value:"Defined in",id:"defined-in-6",level:4},{value:"OEL1ContractsLike",id:"oel1contractslike",level:3},{value:"Defined in",id:"defined-in-7",level:4},{value:"OEL2ContractsLike",id:"oel2contractslike",level:3},{value:"Defined in",id:"defined-in-8",level:4},{value:"ProviderLike",id:"providerlike",level:3},{value:"Defined in",id:"defined-in-9",level:4},{value:"SignerLike",id:"signerlike",level:3},{value:"Defined in",id:"defined-in-10",level:4},{value:"SignerOrProviderLike",id:"signerorproviderlike",level:3},{value:"Defined in",id:"defined-in-11",level:4},{value:"TransactionLike",id:"transactionlike",level:3},{value:"Defined in",id:"defined-in-12",level:4},{value:"Variables",id:"variables-1",level:2},{value:"BRIDGE_ADAPTER_DATA",id:"bridge_adapter_data",level:3},{value:"Defined in",id:"defined-in-13",level:4},{value:"CHAIN_BLOCK_TIMES",id:"chain_block_times",level:3},{value:"Defined in",id:"defined-in-14",level:4},{value:"CONTRACT_ADDRESSES",id:"contract_addresses",level:3},{value:"Defined in",id:"defined-in-15",level:4},{value:"DEFAULT_L2_CONTRACT_ADDRESSES",id:"default_l2_contract_addresses",level:3},{value:"Defined in",id:"defined-in-16",level:4},{value:"DEPOSIT_CONFIRMATION_BLOCKS",id:"deposit_confirmation_blocks",level:3},{value:"Defined in",id:"defined-in-17",level:4},{value:"Functions",id:"functions-1",level:2},{value:"asL2Provider",id:"asl2provider",level:3},{value:"Type parameters",id:"type-parameters-2",level:4},{value:"Parameters",id:"parameters",level:4},{value:"Returns",id:"returns",level:4},{value:"Defined in",id:"defined-in-18",level:4},{value:"estimateL1Gas",id:"estimatel1gas",level:3},{value:"Parameters",id:"parameters-1",level:4},{value:"Returns",id:"returns-1",level:4},{value:"Defined in",id:"defined-in-19",level:4},{value:"estimateL1GasCost",id:"estimatel1gascost",level:3},{value:"Parameters",id:"parameters-2",level:4},{value:"Returns",id:"returns-2",level:4},{value:"Defined in",id:"defined-in-20",level:4},{value:"estimateL2GasCost",id:"estimatel2gascost",level:3},{value:"Parameters",id:"parameters-3",level:4},{value:"Returns",id:"returns-3",level:4},{value:"Defined in",id:"defined-in-21",level:4},{value:"estimateTotalGasCost",id:"estimatetotalgascost",level:3},{value:"Parameters",id:"parameters-4",level:4},{value:"Returns",id:"returns-4",level:4},{value:"Defined in",id:"defined-in-22",level:4},{value:"getAllOEContracts",id:"getalloecontracts",level:3},{value:"Parameters",id:"parameters-5",level:4},{value:"Returns",id:"returns-5",level:4},{value:"Defined in",id:"defined-in-23",level:4},{value:"getBridgeAdapters",id:"getbridgeadapters",level:3},{value:"Parameters",id:"parameters-6",level:4},{value:"Returns",id:"returns-6",level:4},{value:"Defined in",id:"defined-in-24",level:4},{value:"getL1GasPrice",id:"getl1gasprice",level:3},{value:"Parameters",id:"parameters-7",level:4},{value:"Returns",id:"returns-7",level:4},{value:"Defined in",id:"defined-in-25",level:4},{value:"getOEContract",id:"getoecontract",level:3},{value:"Parameters",id:"parameters-8",level:4},{value:"Returns",id:"returns-8",level:4},{value:"Defined in",id:"defined-in-26",level:4},{value:"hashLowLevelMessage",id:"hashlowlevelmessage",level:3},{value:"Parameters",id:"parameters-9",level:4},{value:"Returns",id:"returns-9",level:4},{value:"Defined in",id:"defined-in-27",level:4},{value:"hashMessageHash",id:"hashmessagehash",level:3},{value:"Parameters",id:"parameters-10",level:4},{value:"Returns",id:"returns-10",level:4},{value:"Defined in",id:"defined-in-28",level:4},{value:"isL2Provider",id:"isl2provider",level:3},{value:"Type parameters",id:"type-parameters-3",level:4},{value:"Parameters",id:"parameters-11",level:4},{value:"Returns",id:"returns-11",level:4},{value:"Defined in",id:"defined-in-29",level:4},{value:"migratedWithdrawalGasLimit",id:"migratedwithdrawalgaslimit",level:3},{value:"Parameters",id:"parameters-12",level:4},{value:"Returns",id:"returns-12",level:4},{value:"Defined in",id:"defined-in-30",level:4},{value:"omit",id:"omit",level:3},{value:"Type parameters",id:"type-parameters-4",level:4},{value:"Parameters",id:"parameters-13",level:4},{value:"Returns",id:"returns-13",level:4},{value:"Defined in",id:"defined-in-31",level:4},{value:"toAddress",id:"toaddress",level:3},{value:"Parameters",id:"parameters-14",level:4},{value:"Returns",id:"returns-14",level:4},{value:"Defined in",id:"defined-in-32",level:4},{value:"toBigNumber",id:"tobignumber",level:3},{value:"Parameters",id:"parameters-15",level:4},{value:"Returns",id:"returns-15",level:4},{value:"Defined in",id:"defined-in-33",level:4},{value:"toNumber",id:"tonumber",level:3},{value:"Parameters",id:"parameters-16",level:4},{value:"Returns",id:"returns-16",level:4},{value:"Defined in",id:"defined-in-34",level:4},{value:"toProvider",id:"toprovider",level:3},{value:"Parameters",id:"parameters-17",level:4},{value:"Returns",id:"returns-17",level:4},{value:"Defined in",id:"defined-in-35",level:4},{value:"toSignerOrProvider",id:"tosignerorprovider",level:3},{value:"Parameters",id:"parameters-18",level:4},{value:"Returns",id:"returns-18",level:4},{value:"Defined in",id:"defined-in-36",level:4},{value:"toTransactionHash",id:"totransactionhash",level:3},{value:"Parameters",id:"parameters-19",level:4},{value:"Returns",id:"returns-19",level:4},{value:"Defined in",id:"defined-in-37",level:4}],o={toc:d},k="wrapper";function m(e){let{components:t,...a}=e;return(0,n.kt)(k,(0,r.Z)({},o,a,{components:t,mdxType:"MDXLayout"}),(0,n.kt)("p",null,(0,n.kt)("a",{parentName:"p",href:"/docs/build-on-morph/intro"},"@morph-l2/sdk")," / Exports"),(0,n.kt)("h1",{id:"morph-l2sdk"},"@morph-l2/sdk"),(0,n.kt)("h2",{id:"table-of-contents"},"Table of contents"),(0,n.kt)("h3",{id:"enumerations"},"Enumerations"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"enums/L1ChainID"},"L1ChainID")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"enums/L2ChainID"},"L2ChainID")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"enums/MessageDirection"},"MessageDirection")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"enums/MessageReceiptStatus"},"MessageReceiptStatus")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"enums/MessageStatus"},"MessageStatus"))),(0,n.kt)("h3",{id:"classes"},"Classes"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"classes/CrossChainMessenger"},"CrossChainMessenger")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"classes/DAIBridgeAdapter"},"DAIBridgeAdapter")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"classes/ECOBridgeAdapter"},"ECOBridgeAdapter")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"classes/ETHBridgeAdapter"},"ETHBridgeAdapter")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"classes/StandardBridgeAdapter"},"StandardBridgeAdapter"))),(0,n.kt)("h3",{id:"interfaces"},"Interfaces"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"interfaces/BridgeAdapterData"},"BridgeAdapterData")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"interfaces/BridgeAdapters"},"BridgeAdapters")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"interfaces/CoreCrossChainMessage"},"CoreCrossChainMessage")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"interfaces/CrossChainMessage"},"CrossChainMessage")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"interfaces/CrossChainMessageRequest"},"CrossChainMessageRequest")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"interfaces/IBridgeAdapter"},"IBridgeAdapter")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"interfaces/L2Block"},"L2Block")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"interfaces/L2BlockWithTransactions"},"L2BlockWithTransactions")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"interfaces/L2Transaction"},"L2Transaction")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"interfaces/MessageReceipt"},"MessageReceipt")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"interfaces/OEContracts"},"OEContracts")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"interfaces/OEContractsLike"},"OEContractsLike")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"interfaces/OEL1Contracts"},"OEL1Contracts")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"interfaces/OEL2Contracts"},"OEL2Contracts")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"interfaces/ProvenWithdrawal"},"ProvenWithdrawal")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"interfaces/StateRoot"},"StateRoot")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"interfaces/StateRootBatch"},"StateRootBatch")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"interfaces/StateRootBatchHeader"},"StateRootBatchHeader")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"interfaces/TokenBridgeMessage"},"TokenBridgeMessage")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"interfaces/WithdrawMessageProof"},"WithdrawMessageProof")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"interfaces/WithdrawalEntry"},"WithdrawalEntry"))),(0,n.kt)("h3",{id:"type-aliases"},"Type Aliases"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"modules#addresslike"},"AddressLike")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"modules#deeppartial"},"DeepPartial")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"modules#l2provider"},"L2Provider")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"modules#lowlevelmessage"},"LowLevelMessage")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"modules#messagelike"},"MessageLike")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"modules#messagerequestlike"},"MessageRequestLike")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"modules#numberlike"},"NumberLike")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"modules#oel1contractslike"},"OEL1ContractsLike")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"modules#oel2contractslike"},"OEL2ContractsLike")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"modules#providerlike"},"ProviderLike")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"modules#signerlike"},"SignerLike")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"modules#signerorproviderlike"},"SignerOrProviderLike")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"modules#transactionlike"},"TransactionLike"))),(0,n.kt)("h3",{id:"variables"},"Variables"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"modules#bridge_adapter_data"},"BRIDGE","_","ADAPTER","_","DATA")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"modules#chain_block_times"},"CHAIN","_","BLOCK","_","TIMES")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"modules#contract_addresses"},"CONTRACT","_","ADDRESSES")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"modules#default_l2_contract_addresses"},"DEFAULT","_","L2","_","CONTRACT","_","ADDRESSES")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"modules#deposit_confirmation_blocks"},"DEPOSIT","_","CONFIRMATION","_","BLOCKS"))),(0,n.kt)("h3",{id:"functions"},"Functions"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"modules#asl2provider"},"asL2Provider")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"modules#estimatel1gas"},"estimateL1Gas")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"modules#estimatel1gascost"},"estimateL1GasCost")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"modules#estimatel2gascost"},"estimateL2GasCost")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"modules#estimatetotalgascost"},"estimateTotalGasCost")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"modules#getalloecontracts"},"getAllOEContracts")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"modules#getbridgeadapters"},"getBridgeAdapters")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"modules#getl1gasprice"},"getL1GasPrice")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"modules#getoecontract"},"getOEContract")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"modules#hashlowlevelmessage"},"hashLowLevelMessage")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"modules#hashmessagehash"},"hashMessageHash")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"modules#isl2provider"},"isL2Provider")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"modules#migratedwithdrawalgaslimit"},"migratedWithdrawalGasLimit")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"modules#omit"},"omit")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"modules#toaddress"},"toAddress")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"modules#tobignumber"},"toBigNumber")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"modules#tonumber"},"toNumber")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"modules#toprovider"},"toProvider")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"modules#tosignerorprovider"},"toSignerOrProvider")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"modules#totransactionhash"},"toTransactionHash"))),(0,n.kt)("h2",{id:"type-aliases-1"},"Type Aliases"),(0,n.kt)("h3",{id:"addresslike"},"AddressLike"),(0,n.kt)("p",null,"\u01ac ",(0,n.kt)("strong",{parentName:"p"},"AddressLike"),": ",(0,n.kt)("inlineCode",{parentName:"p"},"string")," ","|"," ",(0,n.kt)("inlineCode",{parentName:"p"},"Contract")),(0,n.kt)("p",null,"Stuff that can be coerced into an address."),(0,n.kt)("h4",{id:"defined-in"},"Defined in"),(0,n.kt)("p",null,(0,n.kt)("a",{parentName:"p",href:"https://github.com/morph-l2/sdk/tree/97c4394/src/interfaces/types.ts#L327"},"src/interfaces/types.ts:327")),(0,n.kt)("hr",null),(0,n.kt)("h3",{id:"deeppartial"},"DeepPartial"),(0,n.kt)("p",null,"\u01ac ",(0,n.kt)("strong",{parentName:"p"},"DeepPartial"),"<",(0,n.kt)("inlineCode",{parentName:"p"},"T"),">",": { ","[P in keyof T]","?: DeepPartial<T","[P]",">"," }"),(0,n.kt)("p",null,"Utility type for deep partials."),(0,n.kt)("h4",{id:"type-parameters"},"Type parameters"),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",{parentName:"tr",align:"left"},"Name"))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"left"},(0,n.kt)("inlineCode",{parentName:"td"},"T"))))),(0,n.kt)("h4",{id:"defined-in-1"},"Defined in"),(0,n.kt)("p",null,(0,n.kt)("a",{parentName:"p",href:"https://github.com/morph-l2/sdk/tree/97c4394/src/utils/type-utils.ts#L4"},"src/utils/type-utils.ts:4")),(0,n.kt)("hr",null),(0,n.kt)("h3",{id:"l2provider"},"L2Provider"),(0,n.kt)("p",null,"\u01ac ",(0,n.kt)("strong",{parentName:"p"},"L2Provider"),"<",(0,n.kt)("inlineCode",{parentName:"p"},"TProvider"),">",": ",(0,n.kt)("inlineCode",{parentName:"p"},"TProvider")," & { ",(0,n.kt)("inlineCode",{parentName:"p"},"_isL2Provider"),": ",(0,n.kt)("inlineCode",{parentName:"p"},"true")," ; ",(0,n.kt)("inlineCode",{parentName:"p"},"estimateL1Gas"),": (",(0,n.kt)("inlineCode",{parentName:"p"},"tx"),": ",(0,n.kt)("inlineCode",{parentName:"p"},"TransactionRequest"),") => ",(0,n.kt)("inlineCode",{parentName:"p"},"Promise"),"<",(0,n.kt)("inlineCode",{parentName:"p"},"BigNumber"),">"," ; ",(0,n.kt)("inlineCode",{parentName:"p"},"estimateL1GasCost"),": (",(0,n.kt)("inlineCode",{parentName:"p"},"tx"),": ",(0,n.kt)("inlineCode",{parentName:"p"},"TransactionRequest"),") => ",(0,n.kt)("inlineCode",{parentName:"p"},"Promise"),"<",(0,n.kt)("inlineCode",{parentName:"p"},"BigNumber"),">"," ; ",(0,n.kt)("inlineCode",{parentName:"p"},"estimateL2GasCost"),": (",(0,n.kt)("inlineCode",{parentName:"p"},"tx"),": ",(0,n.kt)("inlineCode",{parentName:"p"},"TransactionRequest"),") => ",(0,n.kt)("inlineCode",{parentName:"p"},"Promise"),"<",(0,n.kt)("inlineCode",{parentName:"p"},"BigNumber"),">"," ; ",(0,n.kt)("inlineCode",{parentName:"p"},"estimateTotalGasCost"),": (",(0,n.kt)("inlineCode",{parentName:"p"},"tx"),": ",(0,n.kt)("inlineCode",{parentName:"p"},"TransactionRequest"),") => ",(0,n.kt)("inlineCode",{parentName:"p"},"Promise"),"<",(0,n.kt)("inlineCode",{parentName:"p"},"BigNumber"),">"," ; ",(0,n.kt)("inlineCode",{parentName:"p"},"getL1GasPrice"),": () => ",(0,n.kt)("inlineCode",{parentName:"p"},"Promise"),"<",(0,n.kt)("inlineCode",{parentName:"p"},"BigNumber"),">","  }"),(0,n.kt)("p",null,"Represents an extended version of an normal ethers Provider that returns additional L2 info and\nhas special functions for L2-specific interactions."),(0,n.kt)("h4",{id:"type-parameters-1"},"Type parameters"),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,n.kt)("th",{parentName:"tr",align:"left"},"Type"))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"left"},(0,n.kt)("inlineCode",{parentName:"td"},"TProvider")),(0,n.kt)("td",{parentName:"tr",align:"left"},"extends ",(0,n.kt)("inlineCode",{parentName:"td"},"Provider"))))),(0,n.kt)("h4",{id:"defined-in-2"},"Defined in"),(0,n.kt)("p",null,(0,n.kt)("a",{parentName:"p",href:"https://github.com/morph-l2/sdk/tree/97c4394/src/interfaces/l2-provider.ts#L43"},"src/interfaces/l2-provider.ts:43")),(0,n.kt)("hr",null),(0,n.kt)("h3",{id:"lowlevelmessage"},"LowLevelMessage"),(0,n.kt)("p",null,"\u01ac ",(0,n.kt)("strong",{parentName:"p"},"LowLevelMessage"),": ",(0,n.kt)("a",{parentName:"p",href:"interfaces/CoreCrossChainMessage"},(0,n.kt)("inlineCode",{parentName:"a"},"CoreCrossChainMessage"))),(0,n.kt)("p",null,"Describes messages sent inside the L2ToL1MessagePasser on L2. Happens to be the same structure\nas the CoreCrossChainMessage so we'll reuse the type for now."),(0,n.kt)("h4",{id:"defined-in-3"},"Defined in"),(0,n.kt)("p",null,(0,n.kt)("a",{parentName:"p",href:"https://github.com/morph-l2/sdk/tree/97c4394/src/interfaces/types.ts#L206"},"src/interfaces/types.ts:206")),(0,n.kt)("hr",null),(0,n.kt)("h3",{id:"messagelike"},"MessageLike"),(0,n.kt)("p",null,"\u01ac ",(0,n.kt)("strong",{parentName:"p"},"MessageLike"),": ",(0,n.kt)("a",{parentName:"p",href:"interfaces/CrossChainMessage"},(0,n.kt)("inlineCode",{parentName:"a"},"CrossChainMessage"))," ","|"," ",(0,n.kt)("a",{parentName:"p",href:"modules#transactionlike"},(0,n.kt)("inlineCode",{parentName:"a"},"TransactionLike"))," ","|"," ",(0,n.kt)("a",{parentName:"p",href:"interfaces/TokenBridgeMessage"},(0,n.kt)("inlineCode",{parentName:"a"},"TokenBridgeMessage"))),(0,n.kt)("p",null,"Stuff that can be coerced into a CrossChainMessage."),(0,n.kt)("h4",{id:"defined-in-4"},"Defined in"),(0,n.kt)("p",null,(0,n.kt)("a",{parentName:"p",href:"https://github.com/morph-l2/sdk/tree/97c4394/src/interfaces/types.ts#L295"},"src/interfaces/types.ts:295")),(0,n.kt)("hr",null),(0,n.kt)("h3",{id:"messagerequestlike"},"MessageRequestLike"),(0,n.kt)("p",null,"\u01ac ",(0,n.kt)("strong",{parentName:"p"},"MessageRequestLike"),": ",(0,n.kt)("a",{parentName:"p",href:"interfaces/CrossChainMessageRequest"},(0,n.kt)("inlineCode",{parentName:"a"},"CrossChainMessageRequest"))," ","|"," ",(0,n.kt)("a",{parentName:"p",href:"interfaces/CrossChainMessage"},(0,n.kt)("inlineCode",{parentName:"a"},"CrossChainMessage"))," ","|"," ",(0,n.kt)("a",{parentName:"p",href:"modules#transactionlike"},(0,n.kt)("inlineCode",{parentName:"a"},"TransactionLike"))," ","|"," ",(0,n.kt)("a",{parentName:"p",href:"interfaces/TokenBridgeMessage"},(0,n.kt)("inlineCode",{parentName:"a"},"TokenBridgeMessage"))),(0,n.kt)("p",null,"Stuff that can be coerced into a CrossChainMessageRequest."),(0,n.kt)("h4",{id:"defined-in-5"},"Defined in"),(0,n.kt)("p",null,(0,n.kt)("a",{parentName:"p",href:"https://github.com/morph-l2/sdk/tree/97c4394/src/interfaces/types.ts#L303"},"src/interfaces/types.ts:303")),(0,n.kt)("hr",null),(0,n.kt)("h3",{id:"numberlike"},"NumberLike"),(0,n.kt)("p",null,"\u01ac ",(0,n.kt)("strong",{parentName:"p"},"NumberLike"),": ",(0,n.kt)("inlineCode",{parentName:"p"},"string")," ","|"," ",(0,n.kt)("inlineCode",{parentName:"p"},"number")," ","|"," ",(0,n.kt)("inlineCode",{parentName:"p"},"BigNumber")),(0,n.kt)("p",null,"Stuff that can be coerced into a number."),(0,n.kt)("h4",{id:"defined-in-6"},"Defined in"),(0,n.kt)("p",null,(0,n.kt)("a",{parentName:"p",href:"https://github.com/morph-l2/sdk/tree/97c4394/src/interfaces/types.ts#L332"},"src/interfaces/types.ts:332")),(0,n.kt)("hr",null),(0,n.kt)("h3",{id:"oel1contractslike"},"OEL1ContractsLike"),(0,n.kt)("p",null,"\u01ac ",(0,n.kt)("strong",{parentName:"p"},"OEL1ContractsLike"),": { ","[K in keyof OEL1Contracts]",": AddressLike }"),(0,n.kt)("p",null,"Convenience type for something that looks like the L1 OE contract interface but could be\naddresses instead of actual contract objects."),(0,n.kt)("h4",{id:"defined-in-7"},"Defined in"),(0,n.kt)("p",null,(0,n.kt)("a",{parentName:"p",href:"https://github.com/morph-l2/sdk/tree/97c4394/src/interfaces/types.ts#L72"},"src/interfaces/types.ts:72")),(0,n.kt)("hr",null),(0,n.kt)("h3",{id:"oel2contractslike"},"OEL2ContractsLike"),(0,n.kt)("p",null,"\u01ac ",(0,n.kt)("strong",{parentName:"p"},"OEL2ContractsLike"),": { ","[K in keyof OEL2Contracts]",": AddressLike }"),(0,n.kt)("p",null,"Convenience type for something that looks like the L2 OE contract interface but could be\naddresses instead of actual contract objects."),(0,n.kt)("h4",{id:"defined-in-8"},"Defined in"),(0,n.kt)("p",null,(0,n.kt)("a",{parentName:"p",href:"https://github.com/morph-l2/sdk/tree/97c4394/src/interfaces/types.ts#L80"},"src/interfaces/types.ts:80")),(0,n.kt)("hr",null),(0,n.kt)("h3",{id:"providerlike"},"ProviderLike"),(0,n.kt)("p",null,"\u01ac ",(0,n.kt)("strong",{parentName:"p"},"ProviderLike"),": ",(0,n.kt)("inlineCode",{parentName:"p"},"string")," ","|"," ",(0,n.kt)("inlineCode",{parentName:"p"},"Provider")),(0,n.kt)("p",null,"Stuff that can be coerced into a provider."),(0,n.kt)("h4",{id:"defined-in-9"},"Defined in"),(0,n.kt)("p",null,(0,n.kt)("a",{parentName:"p",href:"https://github.com/morph-l2/sdk/tree/97c4394/src/interfaces/types.ts#L312"},"src/interfaces/types.ts:312")),(0,n.kt)("hr",null),(0,n.kt)("h3",{id:"signerlike"},"SignerLike"),(0,n.kt)("p",null,"\u01ac ",(0,n.kt)("strong",{parentName:"p"},"SignerLike"),": ",(0,n.kt)("inlineCode",{parentName:"p"},"string")," ","|"," ",(0,n.kt)("inlineCode",{parentName:"p"},"Signer")),(0,n.kt)("p",null,"Stuff that can be coerced into a signer."),(0,n.kt)("h4",{id:"defined-in-10"},"Defined in"),(0,n.kt)("p",null,(0,n.kt)("a",{parentName:"p",href:"https://github.com/morph-l2/sdk/tree/97c4394/src/interfaces/types.ts#L317"},"src/interfaces/types.ts:317")),(0,n.kt)("hr",null),(0,n.kt)("h3",{id:"signerorproviderlike"},"SignerOrProviderLike"),(0,n.kt)("p",null,"\u01ac ",(0,n.kt)("strong",{parentName:"p"},"SignerOrProviderLike"),": ",(0,n.kt)("a",{parentName:"p",href:"modules#signerlike"},(0,n.kt)("inlineCode",{parentName:"a"},"SignerLike"))," ","|"," ",(0,n.kt)("a",{parentName:"p",href:"modules#providerlike"},(0,n.kt)("inlineCode",{parentName:"a"},"ProviderLike"))),(0,n.kt)("p",null,"Stuff that can be coerced into a signer or provider."),(0,n.kt)("h4",{id:"defined-in-11"},"Defined in"),(0,n.kt)("p",null,(0,n.kt)("a",{parentName:"p",href:"https://github.com/morph-l2/sdk/tree/97c4394/src/interfaces/types.ts#L322"},"src/interfaces/types.ts:322")),(0,n.kt)("hr",null),(0,n.kt)("h3",{id:"transactionlike"},"TransactionLike"),(0,n.kt)("p",null,"\u01ac ",(0,n.kt)("strong",{parentName:"p"},"TransactionLike"),": ",(0,n.kt)("inlineCode",{parentName:"p"},"string")," ","|"," ",(0,n.kt)("inlineCode",{parentName:"p"},"TransactionReceipt")," ","|"," ",(0,n.kt)("inlineCode",{parentName:"p"},"TransactionResponse")),(0,n.kt)("p",null,"Stuff that can be coerced into a transaction."),(0,n.kt)("h4",{id:"defined-in-12"},"Defined in"),(0,n.kt)("p",null,(0,n.kt)("a",{parentName:"p",href:"https://github.com/morph-l2/sdk/tree/97c4394/src/interfaces/types.ts#L290"},"src/interfaces/types.ts:290")),(0,n.kt)("h2",{id:"variables-1"},"Variables"),(0,n.kt)("h3",{id:"bridge_adapter_data"},"BRIDGE","_","ADAPTER","_","DATA"),(0,n.kt)("p",null,"\u2022 ",(0,n.kt)("inlineCode",{parentName:"p"},"Const")," ",(0,n.kt)("strong",{parentName:"p"},"BRIDGE","_","ADAPTER","_","DATA"),": { ","[ChainID in L2ChainID]","?: BridgeAdapterData }"),(0,n.kt)("p",null,"Mapping of L1 chain IDs to the list of custom bridge addresses for each chain."),(0,n.kt)("h4",{id:"defined-in-13"},"Defined in"),(0,n.kt)("p",null,(0,n.kt)("a",{parentName:"p",href:"https://github.com/morph-l2/sdk/tree/97c4394/src/utils/chain-constants.ts#L95"},"src/utils/chain-constants.ts:95")),(0,n.kt)("hr",null),(0,n.kt)("h3",{id:"chain_block_times"},"CHAIN","_","BLOCK","_","TIMES"),(0,n.kt)("p",null,"\u2022 ",(0,n.kt)("inlineCode",{parentName:"p"},"Const")," ",(0,n.kt)("strong",{parentName:"p"},"CHAIN","_","BLOCK","_","TIMES"),": { ","[ChainID in L1ChainID]",": number }"),(0,n.kt)("h4",{id:"defined-in-14"},"Defined in"),(0,n.kt)("p",null,(0,n.kt)("a",{parentName:"p",href:"https://github.com/morph-l2/sdk/tree/97c4394/src/utils/chain-constants.ts#L20"},"src/utils/chain-constants.ts:20")),(0,n.kt)("hr",null),(0,n.kt)("h3",{id:"contract_addresses"},"CONTRACT","_","ADDRESSES"),(0,n.kt)("p",null,"\u2022 ",(0,n.kt)("inlineCode",{parentName:"p"},"Const")," ",(0,n.kt)("strong",{parentName:"p"},"CONTRACT","_","ADDRESSES"),": { ","[ChainID in L2ChainID]",": OEContractsLike }"),(0,n.kt)("p",null,"Mapping of L1 chain IDs to the appropriate contract addresses for the OE deployments to the\ngiven network. Simplifies the process of getting the correct contract addresses for a given\ncontract name."),(0,n.kt)("h4",{id:"defined-in-15"},"Defined in"),(0,n.kt)("p",null,(0,n.kt)("a",{parentName:"p",href:"https://github.com/morph-l2/sdk/tree/97c4394/src/utils/chain-constants.ts#L51"},"src/utils/chain-constants.ts:51")),(0,n.kt)("hr",null),(0,n.kt)("h3",{id:"default_l2_contract_addresses"},"DEFAULT","_","L2","_","CONTRACT","_","ADDRESSES"),(0,n.kt)("p",null,"\u2022 ",(0,n.kt)("inlineCode",{parentName:"p"},"Const")," ",(0,n.kt)("strong",{parentName:"p"},"DEFAULT","_","L2","_","CONTRACT","_","ADDRESSES"),": ",(0,n.kt)("a",{parentName:"p",href:"modules#oel2contractslike"},(0,n.kt)("inlineCode",{parentName:"a"},"OEL2ContractsLike"))),(0,n.kt)("p",null,"Full list of default L2 contract addresses.\nTODO(tynes): migrate to predeploys from contracts-bedrock"),(0,n.kt)("h4",{id:"defined-in-16"},"Defined in"),(0,n.kt)("p",null,(0,n.kt)("a",{parentName:"p",href:"https://github.com/morph-l2/sdk/tree/97c4394/src/utils/chain-constants.ts#L33"},"src/utils/chain-constants.ts:33")),(0,n.kt)("hr",null),(0,n.kt)("h3",{id:"deposit_confirmation_blocks"},"DEPOSIT","_","CONFIRMATION","_","BLOCKS"),(0,n.kt)("p",null,"\u2022 ",(0,n.kt)("inlineCode",{parentName:"p"},"Const")," ",(0,n.kt)("strong",{parentName:"p"},"DEPOSIT","_","CONFIRMATION","_","BLOCKS"),": { ","[ChainID in L2ChainID]",": number }"),(0,n.kt)("h4",{id:"defined-in-17"},"Defined in"),(0,n.kt)("p",null,(0,n.kt)("a",{parentName:"p",href:"https://github.com/morph-l2/sdk/tree/97c4394/src/utils/chain-constants.ts#L12"},"src/utils/chain-constants.ts:12")),(0,n.kt)("h2",{id:"functions-1"},"Functions"),(0,n.kt)("h3",{id:"asl2provider"},"asL2Provider"),(0,n.kt)("p",null,"\u25b8 ",(0,n.kt)("strong",{parentName:"p"},"asL2Provider"),"<",(0,n.kt)("inlineCode",{parentName:"p"},"TProvider"),">","(",(0,n.kt)("inlineCode",{parentName:"p"},"provider"),"): ",(0,n.kt)("a",{parentName:"p",href:"modules#l2provider"},(0,n.kt)("inlineCode",{parentName:"a"},"L2Provider")),"<",(0,n.kt)("inlineCode",{parentName:"p"},"TProvider"),">"),(0,n.kt)("p",null,"Returns an provider wrapped as an Morph L2 provider. Adds a few extra helper functions to\nsimplify the process of estimating the gas usage for a transaction on Morph. Returns a COPY\nof the original provider."),(0,n.kt)("h4",{id:"type-parameters-2"},"Type parameters"),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,n.kt)("th",{parentName:"tr",align:"left"},"Type"))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"left"},(0,n.kt)("inlineCode",{parentName:"td"},"TProvider")),(0,n.kt)("td",{parentName:"tr",align:"left"},"extends ",(0,n.kt)("inlineCode",{parentName:"td"},"Provider"))))),(0,n.kt)("h4",{id:"parameters"},"Parameters"),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,n.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,n.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"left"},(0,n.kt)("inlineCode",{parentName:"td"},"provider")),(0,n.kt)("td",{parentName:"tr",align:"left"},(0,n.kt)("inlineCode",{parentName:"td"},"TProvider")),(0,n.kt)("td",{parentName:"tr",align:"left"},"Provider to wrap into an L2 provider.")))),(0,n.kt)("h4",{id:"returns"},"Returns"),(0,n.kt)("p",null,(0,n.kt)("a",{parentName:"p",href:"modules#l2provider"},(0,n.kt)("inlineCode",{parentName:"a"},"L2Provider")),"<",(0,n.kt)("inlineCode",{parentName:"p"},"TProvider"),">"),(0,n.kt)("p",null,"Provider wrapped as an L2 provider."),(0,n.kt)("h4",{id:"defined-in-18"},"Defined in"),(0,n.kt)("p",null,(0,n.kt)("a",{parentName:"p",href:"https://github.com/morph-l2/sdk/tree/97c4394/src/l2-provider.ts#L168"},"src/l2-provider.ts:168")),(0,n.kt)("hr",null),(0,n.kt)("h3",{id:"estimatel1gas"},"estimateL1Gas"),(0,n.kt)("p",null,"\u25b8 ",(0,n.kt)("strong",{parentName:"p"},"estimateL1Gas"),"(",(0,n.kt)("inlineCode",{parentName:"p"},"l2Provider"),", ",(0,n.kt)("inlineCode",{parentName:"p"},"tx"),"): ",(0,n.kt)("inlineCode",{parentName:"p"},"Promise"),"<",(0,n.kt)("inlineCode",{parentName:"p"},"BigNumber"),">"),(0,n.kt)("p",null,"Estimates the amount of L1 gas required for a given L2 transaction."),(0,n.kt)("h4",{id:"parameters-1"},"Parameters"),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,n.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,n.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"left"},(0,n.kt)("inlineCode",{parentName:"td"},"l2Provider")),(0,n.kt)("td",{parentName:"tr",align:"left"},(0,n.kt)("a",{parentName:"td",href:"modules#providerlike"},(0,n.kt)("inlineCode",{parentName:"a"},"ProviderLike"))),(0,n.kt)("td",{parentName:"tr",align:"left"},"L2 provider to query the gas usage from.")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"left"},(0,n.kt)("inlineCode",{parentName:"td"},"tx")),(0,n.kt)("td",{parentName:"tr",align:"left"},(0,n.kt)("inlineCode",{parentName:"td"},"TransactionRequest")),(0,n.kt)("td",{parentName:"tr",align:"left"},"Transaction to estimate L1 gas for.")))),(0,n.kt)("h4",{id:"returns-1"},"Returns"),(0,n.kt)("p",null,(0,n.kt)("inlineCode",{parentName:"p"},"Promise"),"<",(0,n.kt)("inlineCode",{parentName:"p"},"BigNumber"),">"),(0,n.kt)("p",null,"Estimated L1 gas."),(0,n.kt)("h4",{id:"defined-in-19"},"Defined in"),(0,n.kt)("p",null,(0,n.kt)("a",{parentName:"p",href:"https://github.com/morph-l2/sdk/tree/97c4394/src/l2-provider.ts#L68"},"src/l2-provider.ts:68")),(0,n.kt)("hr",null),(0,n.kt)("h3",{id:"estimatel1gascost"},"estimateL1GasCost"),(0,n.kt)("p",null,"\u25b8 ",(0,n.kt)("strong",{parentName:"p"},"estimateL1GasCost"),"(",(0,n.kt)("inlineCode",{parentName:"p"},"l2Provider"),", ",(0,n.kt)("inlineCode",{parentName:"p"},"tx"),"): ",(0,n.kt)("inlineCode",{parentName:"p"},"Promise"),"<",(0,n.kt)("inlineCode",{parentName:"p"},"BigNumber"),">"),(0,n.kt)("p",null,"Estimates the amount of L1 gas cost for a given L2 transaction in wei."),(0,n.kt)("h4",{id:"parameters-2"},"Parameters"),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,n.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,n.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"left"},(0,n.kt)("inlineCode",{parentName:"td"},"l2Provider")),(0,n.kt)("td",{parentName:"tr",align:"left"},(0,n.kt)("a",{parentName:"td",href:"modules#providerlike"},(0,n.kt)("inlineCode",{parentName:"a"},"ProviderLike"))),(0,n.kt)("td",{parentName:"tr",align:"left"},"L2 provider to query the gas usage from.")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"left"},(0,n.kt)("inlineCode",{parentName:"td"},"tx")),(0,n.kt)("td",{parentName:"tr",align:"left"},(0,n.kt)("inlineCode",{parentName:"td"},"TransactionRequest")),(0,n.kt)("td",{parentName:"tr",align:"left"},"Transaction to estimate L1 gas cost for.")))),(0,n.kt)("h4",{id:"returns-2"},"Returns"),(0,n.kt)("p",null,(0,n.kt)("inlineCode",{parentName:"p"},"Promise"),"<",(0,n.kt)("inlineCode",{parentName:"p"},"BigNumber"),">"),(0,n.kt)("p",null,"Estimated L1 gas cost."),(0,n.kt)("h4",{id:"defined-in-20"},"Defined in"),(0,n.kt)("p",null,(0,n.kt)("a",{parentName:"p",href:"https://github.com/morph-l2/sdk/tree/97c4394/src/l2-provider.ts#L92"},"src/l2-provider.ts:92")),(0,n.kt)("hr",null),(0,n.kt)("h3",{id:"estimatel2gascost"},"estimateL2GasCost"),(0,n.kt)("p",null,"\u25b8 ",(0,n.kt)("strong",{parentName:"p"},"estimateL2GasCost"),"(",(0,n.kt)("inlineCode",{parentName:"p"},"l2Provider"),", ",(0,n.kt)("inlineCode",{parentName:"p"},"tx"),"): ",(0,n.kt)("inlineCode",{parentName:"p"},"Promise"),"<",(0,n.kt)("inlineCode",{parentName:"p"},"BigNumber"),">"),(0,n.kt)("p",null,"Estimates the L2 gas cost for a given L2 transaction in wei."),(0,n.kt)("h4",{id:"parameters-3"},"Parameters"),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,n.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,n.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"left"},(0,n.kt)("inlineCode",{parentName:"td"},"l2Provider")),(0,n.kt)("td",{parentName:"tr",align:"left"},(0,n.kt)("a",{parentName:"td",href:"modules#providerlike"},(0,n.kt)("inlineCode",{parentName:"a"},"ProviderLike"))),(0,n.kt)("td",{parentName:"tr",align:"left"},"L2 provider to query the gas usage from.")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"left"},(0,n.kt)("inlineCode",{parentName:"td"},"tx")),(0,n.kt)("td",{parentName:"tr",align:"left"},(0,n.kt)("inlineCode",{parentName:"td"},"TransactionRequest")),(0,n.kt)("td",{parentName:"tr",align:"left"},"Transaction to estimate L2 gas cost for.")))),(0,n.kt)("h4",{id:"returns-3"},"Returns"),(0,n.kt)("p",null,(0,n.kt)("inlineCode",{parentName:"p"},"Promise"),"<",(0,n.kt)("inlineCode",{parentName:"p"},"BigNumber"),">"),(0,n.kt)("p",null,"Estimated L2 gas cost."),(0,n.kt)("h4",{id:"defined-in-21"},"Defined in"),(0,n.kt)("p",null,(0,n.kt)("a",{parentName:"p",href:"https://github.com/morph-l2/sdk/tree/97c4394/src/l2-provider.ts#L116"},"src/l2-provider.ts:116")),(0,n.kt)("hr",null),(0,n.kt)("h3",{id:"estimatetotalgascost"},"estimateTotalGasCost"),(0,n.kt)("p",null,"\u25b8 ",(0,n.kt)("strong",{parentName:"p"},"estimateTotalGasCost"),"(",(0,n.kt)("inlineCode",{parentName:"p"},"l2Provider"),", ",(0,n.kt)("inlineCode",{parentName:"p"},"tx"),"): ",(0,n.kt)("inlineCode",{parentName:"p"},"Promise"),"<",(0,n.kt)("inlineCode",{parentName:"p"},"BigNumber"),">"),(0,n.kt)("p",null,"Estimates the total gas cost for a given L2 transaction in wei."),(0,n.kt)("h4",{id:"parameters-4"},"Parameters"),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,n.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,n.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"left"},(0,n.kt)("inlineCode",{parentName:"td"},"l2Provider")),(0,n.kt)("td",{parentName:"tr",align:"left"},(0,n.kt)("a",{parentName:"td",href:"modules#providerlike"},(0,n.kt)("inlineCode",{parentName:"a"},"ProviderLike"))),(0,n.kt)("td",{parentName:"tr",align:"left"},"L2 provider to query the gas usage from.")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"left"},(0,n.kt)("inlineCode",{parentName:"td"},"tx")),(0,n.kt)("td",{parentName:"tr",align:"left"},(0,n.kt)("inlineCode",{parentName:"td"},"TransactionRequest")),(0,n.kt)("td",{parentName:"tr",align:"left"},"Transaction to estimate total gas cost for.")))),(0,n.kt)("h4",{id:"returns-4"},"Returns"),(0,n.kt)("p",null,(0,n.kt)("inlineCode",{parentName:"p"},"Promise"),"<",(0,n.kt)("inlineCode",{parentName:"p"},"BigNumber"),">"),(0,n.kt)("p",null,"Estimated total gas cost."),(0,n.kt)("h4",{id:"defined-in-22"},"Defined in"),(0,n.kt)("p",null,(0,n.kt)("a",{parentName:"p",href:"https://github.com/morph-l2/sdk/tree/97c4394/src/l2-provider.ts#L133"},"src/l2-provider.ts:133")),(0,n.kt)("hr",null),(0,n.kt)("h3",{id:"getalloecontracts"},"getAllOEContracts"),(0,n.kt)("p",null,"\u25b8 ",(0,n.kt)("strong",{parentName:"p"},"getAllOEContracts"),"(",(0,n.kt)("inlineCode",{parentName:"p"},"l2ChainId"),", ",(0,n.kt)("inlineCode",{parentName:"p"},"opts?"),"): ",(0,n.kt)("a",{parentName:"p",href:"interfaces/OEContracts"},(0,n.kt)("inlineCode",{parentName:"a"},"OEContracts"))),(0,n.kt)("p",null,"Automatically connects to all contract addresses, both L1 and L2, for the given L2 chain ID. The\nuser can provide custom contract address overrides for L1 or L2 contracts. If the given chain ID\nis not known then the user MUST provide custom contract addresses for ALL L1 contracts or this\nfunction will throw an error."),(0,n.kt)("h4",{id:"parameters-5"},"Parameters"),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,n.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,n.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"left"},(0,n.kt)("inlineCode",{parentName:"td"},"l2ChainId")),(0,n.kt)("td",{parentName:"tr",align:"left"},(0,n.kt)("inlineCode",{parentName:"td"},"number")),(0,n.kt)("td",{parentName:"tr",align:"left"},"Chain ID for the L2 network.")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"left"},(0,n.kt)("inlineCode",{parentName:"td"},"opts")),(0,n.kt)("td",{parentName:"tr",align:"left"},(0,n.kt)("inlineCode",{parentName:"td"},"Object")),(0,n.kt)("td",{parentName:"tr",align:"left"},"Additional options for connecting to the contracts.")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"left"},(0,n.kt)("inlineCode",{parentName:"td"},"opts.l1SignerOrProvider?")),(0,n.kt)("td",{parentName:"tr",align:"left"},(0,n.kt)("inlineCode",{parentName:"td"},"Provider")," ","|"," ",(0,n.kt)("inlineCode",{parentName:"td"},"Signer")),(0,n.kt)("td",{parentName:"tr",align:"left"},"-")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"left"},(0,n.kt)("inlineCode",{parentName:"td"},"opts.l2SignerOrProvider?")),(0,n.kt)("td",{parentName:"tr",align:"left"},(0,n.kt)("inlineCode",{parentName:"td"},"Provider")," ","|"," ",(0,n.kt)("inlineCode",{parentName:"td"},"Signer")),(0,n.kt)("td",{parentName:"tr",align:"left"},"-")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"left"},(0,n.kt)("inlineCode",{parentName:"td"},"opts.overrides?")),(0,n.kt)("td",{parentName:"tr",align:"left"},(0,n.kt)("a",{parentName:"td",href:"modules#deeppartial"},(0,n.kt)("inlineCode",{parentName:"a"},"DeepPartial")),"<",(0,n.kt)("a",{parentName:"td",href:"interfaces/OEContractsLike"},(0,n.kt)("inlineCode",{parentName:"a"},"OEContractsLike")),">"),(0,n.kt)("td",{parentName:"tr",align:"left"},"Custom contract address overrides for L1 or L2 contracts.")))),(0,n.kt)("h4",{id:"returns-5"},"Returns"),(0,n.kt)("p",null,(0,n.kt)("a",{parentName:"p",href:"interfaces/OEContracts"},(0,n.kt)("inlineCode",{parentName:"a"},"OEContracts"))),(0,n.kt)("p",null,"An object containing ethers.Contract objects connected to the appropriate addresses on\nboth L1 and L2."),(0,n.kt)("h4",{id:"defined-in-23"},"Defined in"),(0,n.kt)("p",null,(0,n.kt)("a",{parentName:"p",href:"https://github.com/morph-l2/sdk/tree/97c4394/src/utils/contracts.ts#L102"},"src/utils/contracts.ts:102")),(0,n.kt)("hr",null),(0,n.kt)("h3",{id:"getbridgeadapters"},"getBridgeAdapters"),(0,n.kt)("p",null,"\u25b8 ",(0,n.kt)("strong",{parentName:"p"},"getBridgeAdapters"),"(",(0,n.kt)("inlineCode",{parentName:"p"},"l2ChainId"),", ",(0,n.kt)("inlineCode",{parentName:"p"},"messenger"),", ",(0,n.kt)("inlineCode",{parentName:"p"},"opts?"),"): ",(0,n.kt)("a",{parentName:"p",href:"interfaces/BridgeAdapters"},(0,n.kt)("inlineCode",{parentName:"a"},"BridgeAdapters"))),(0,n.kt)("p",null,"Gets a series of bridge adapters for the given L2 chain ID."),(0,n.kt)("h4",{id:"parameters-6"},"Parameters"),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,n.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,n.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"left"},(0,n.kt)("inlineCode",{parentName:"td"},"l2ChainId")),(0,n.kt)("td",{parentName:"tr",align:"left"},(0,n.kt)("inlineCode",{parentName:"td"},"number")),(0,n.kt)("td",{parentName:"tr",align:"left"},"Chain ID for the L2 network.")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"left"},(0,n.kt)("inlineCode",{parentName:"td"},"messenger")),(0,n.kt)("td",{parentName:"tr",align:"left"},(0,n.kt)("a",{parentName:"td",href:"classes/CrossChainMessenger"},(0,n.kt)("inlineCode",{parentName:"a"},"CrossChainMessenger"))),(0,n.kt)("td",{parentName:"tr",align:"left"},"Cross chain messenger to connect to the bridge adapters")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"left"},(0,n.kt)("inlineCode",{parentName:"td"},"opts?")),(0,n.kt)("td",{parentName:"tr",align:"left"},(0,n.kt)("inlineCode",{parentName:"td"},"Object")),(0,n.kt)("td",{parentName:"tr",align:"left"},"Additional options for connecting to the custom bridges.")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"left"},(0,n.kt)("inlineCode",{parentName:"td"},"opts.contracts?")),(0,n.kt)("td",{parentName:"tr",align:"left"},(0,n.kt)("a",{parentName:"td",href:"modules#deeppartial"},(0,n.kt)("inlineCode",{parentName:"a"},"DeepPartial")),"<",(0,n.kt)("a",{parentName:"td",href:"interfaces/OEContractsLike"},(0,n.kt)("inlineCode",{parentName:"a"},"OEContractsLike")),">"),(0,n.kt)("td",{parentName:"tr",align:"left"},"-")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"left"},(0,n.kt)("inlineCode",{parentName:"td"},"opts.overrides?")),(0,n.kt)("td",{parentName:"tr",align:"left"},(0,n.kt)("a",{parentName:"td",href:"interfaces/BridgeAdapterData"},(0,n.kt)("inlineCode",{parentName:"a"},"BridgeAdapterData"))),(0,n.kt)("td",{parentName:"tr",align:"left"},"Custom bridge adapters.")))),(0,n.kt)("h4",{id:"returns-6"},"Returns"),(0,n.kt)("p",null,(0,n.kt)("a",{parentName:"p",href:"interfaces/BridgeAdapters"},(0,n.kt)("inlineCode",{parentName:"a"},"BridgeAdapters"))),(0,n.kt)("p",null,"An object containing all bridge adapters"),(0,n.kt)("h4",{id:"defined-in-24"},"Defined in"),(0,n.kt)("p",null,(0,n.kt)("a",{parentName:"p",href:"https://github.com/morph-l2/sdk/tree/97c4394/src/utils/contracts.ts#L163"},"src/utils/contracts.ts:163")),(0,n.kt)("hr",null),(0,n.kt)("h3",{id:"getl1gasprice"},"getL1GasPrice"),(0,n.kt)("p",null,"\u25b8 ",(0,n.kt)("strong",{parentName:"p"},"getL1GasPrice"),"(",(0,n.kt)("inlineCode",{parentName:"p"},"l2Provider"),"): ",(0,n.kt)("inlineCode",{parentName:"p"},"Promise"),"<",(0,n.kt)("inlineCode",{parentName:"p"},"BigNumber"),">"),(0,n.kt)("p",null,"Gets the current L1 gas price as seen on L2."),(0,n.kt)("h4",{id:"parameters-7"},"Parameters"),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,n.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,n.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"left"},(0,n.kt)("inlineCode",{parentName:"td"},"l2Provider")),(0,n.kt)("td",{parentName:"tr",align:"left"},(0,n.kt)("a",{parentName:"td",href:"modules#providerlike"},(0,n.kt)("inlineCode",{parentName:"a"},"ProviderLike"))),(0,n.kt)("td",{parentName:"tr",align:"left"},"L2 provider to query the L1 gas price from.")))),(0,n.kt)("h4",{id:"returns-7"},"Returns"),(0,n.kt)("p",null,(0,n.kt)("inlineCode",{parentName:"p"},"Promise"),"<",(0,n.kt)("inlineCode",{parentName:"p"},"BigNumber"),">"),(0,n.kt)("p",null,"Current L1 gas price as seen on L2."),(0,n.kt)("h4",{id:"defined-in-25"},"Defined in"),(0,n.kt)("p",null,(0,n.kt)("a",{parentName:"p",href:"https://github.com/morph-l2/sdk/tree/97c4394/src/l2-provider.ts#L54"},"src/l2-provider.ts:54")),(0,n.kt)("hr",null),(0,n.kt)("h3",{id:"getoecontract"},"getOEContract"),(0,n.kt)("p",null,"\u25b8 ",(0,n.kt)("strong",{parentName:"p"},"getOEContract"),"(",(0,n.kt)("inlineCode",{parentName:"p"},"contractName"),", ",(0,n.kt)("inlineCode",{parentName:"p"},"l2ChainId"),", ",(0,n.kt)("inlineCode",{parentName:"p"},"opts?"),"): ",(0,n.kt)("inlineCode",{parentName:"p"},"Contract")),(0,n.kt)("p",null,"Returns an ethers.Contract object for the given name, connected to the appropriate address for\nthe given L2 chain ID. Users can also provide a custom address to connect the contract to\ninstead. If the chain ID is not known then the user MUST provide a custom address or this\nfunction will throw an error."),(0,n.kt)("h4",{id:"parameters-8"},"Parameters"),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,n.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,n.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"left"},(0,n.kt)("inlineCode",{parentName:"td"},"contractName")),(0,n.kt)("td",{parentName:"tr",align:"left"},"keyof ",(0,n.kt)("a",{parentName:"td",href:"interfaces/OEL1Contracts"},(0,n.kt)("inlineCode",{parentName:"a"},"OEL1Contracts"))," ","|"," keyof ",(0,n.kt)("a",{parentName:"td",href:"interfaces/OEL2Contracts"},(0,n.kt)("inlineCode",{parentName:"a"},"OEL2Contracts"))),(0,n.kt)("td",{parentName:"tr",align:"left"},"Name of the contract to connect to.")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"left"},(0,n.kt)("inlineCode",{parentName:"td"},"l2ChainId")),(0,n.kt)("td",{parentName:"tr",align:"left"},(0,n.kt)("inlineCode",{parentName:"td"},"number")),(0,n.kt)("td",{parentName:"tr",align:"left"},"Chain ID for the L2 network.")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"left"},(0,n.kt)("inlineCode",{parentName:"td"},"opts")),(0,n.kt)("td",{parentName:"tr",align:"left"},(0,n.kt)("inlineCode",{parentName:"td"},"Object")),(0,n.kt)("td",{parentName:"tr",align:"left"},"Additional options for connecting to the contract.")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"left"},(0,n.kt)("inlineCode",{parentName:"td"},"opts.address?")),(0,n.kt)("td",{parentName:"tr",align:"left"},(0,n.kt)("a",{parentName:"td",href:"modules#addresslike"},(0,n.kt)("inlineCode",{parentName:"a"},"AddressLike"))),(0,n.kt)("td",{parentName:"tr",align:"left"},"Custom address to connect to the contract.")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"left"},(0,n.kt)("inlineCode",{parentName:"td"},"opts.signerOrProvider?")),(0,n.kt)("td",{parentName:"tr",align:"left"},(0,n.kt)("inlineCode",{parentName:"td"},"Provider")," ","|"," ",(0,n.kt)("inlineCode",{parentName:"td"},"Signer")),(0,n.kt)("td",{parentName:"tr",align:"left"},"Signer or provider to connect to the contract.")))),(0,n.kt)("h4",{id:"returns-8"},"Returns"),(0,n.kt)("p",null,(0,n.kt)("inlineCode",{parentName:"p"},"Contract")),(0,n.kt)("p",null,"An ethers.Contract object connected to the appropriate address and interface."),(0,n.kt)("h4",{id:"defined-in-26"},"Defined in"),(0,n.kt)("p",null,(0,n.kt)("a",{parentName:"p",href:"https://github.com/morph-l2/sdk/tree/97c4394/src/utils/contracts.ts#L52"},"src/utils/contracts.ts:52")),(0,n.kt)("hr",null),(0,n.kt)("h3",{id:"hashlowlevelmessage"},"hashLowLevelMessage"),(0,n.kt)("p",null,"\u25b8 ",(0,n.kt)("strong",{parentName:"p"},"hashLowLevelMessage"),"(",(0,n.kt)("inlineCode",{parentName:"p"},"message"),"): ",(0,n.kt)("inlineCode",{parentName:"p"},"string")),(0,n.kt)("p",null,"Utility for hashing a LowLevelMessage object."),(0,n.kt)("h4",{id:"parameters-9"},"Parameters"),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,n.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,n.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"left"},(0,n.kt)("inlineCode",{parentName:"td"},"message")),(0,n.kt)("td",{parentName:"tr",align:"left"},(0,n.kt)("a",{parentName:"td",href:"interfaces/CoreCrossChainMessage"},(0,n.kt)("inlineCode",{parentName:"a"},"CoreCrossChainMessage"))),(0,n.kt)("td",{parentName:"tr",align:"left"},"LowLevelMessage object to hash.")))),(0,n.kt)("h4",{id:"returns-9"},"Returns"),(0,n.kt)("p",null,(0,n.kt)("inlineCode",{parentName:"p"},"string")),(0,n.kt)("p",null,"Hash of the given LowLevelMessage."),(0,n.kt)("h4",{id:"defined-in-27"},"Defined in"),(0,n.kt)("p",null,(0,n.kt)("a",{parentName:"p",href:"https://github.com/morph-l2/sdk/tree/97c4394/src/utils/message-utils.ts#L23"},"src/utils/message-utils.ts:23")),(0,n.kt)("hr",null),(0,n.kt)("h3",{id:"hashmessagehash"},"hashMessageHash"),(0,n.kt)("p",null,"\u25b8 ",(0,n.kt)("strong",{parentName:"p"},"hashMessageHash"),"(",(0,n.kt)("inlineCode",{parentName:"p"},"messageHash"),"): ",(0,n.kt)("inlineCode",{parentName:"p"},"string")),(0,n.kt)("p",null,"Utility for hashing a message hash. This computes the storage slot\nwhere the message hash will be stored in state. HashZero is used\nbecause the first mapping in the contract is used."),(0,n.kt)("h4",{id:"parameters-10"},"Parameters"),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,n.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,n.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"left"},(0,n.kt)("inlineCode",{parentName:"td"},"messageHash")),(0,n.kt)("td",{parentName:"tr",align:"left"},(0,n.kt)("inlineCode",{parentName:"td"},"string")),(0,n.kt)("td",{parentName:"tr",align:"left"},"Message hash to hash.")))),(0,n.kt)("h4",{id:"returns-10"},"Returns"),(0,n.kt)("p",null,(0,n.kt)("inlineCode",{parentName:"p"},"string")),(0,n.kt)("p",null,"Hash of the given message hash."),(0,n.kt)("h4",{id:"defined-in-28"},"Defined in"),(0,n.kt)("p",null,(0,n.kt)("a",{parentName:"p",href:"https://github.com/morph-l2/sdk/tree/97c4394/src/utils/message-utils.ts#L42"},"src/utils/message-utils.ts:42")),(0,n.kt)("hr",null),(0,n.kt)("h3",{id:"isl2provider"},"isL2Provider"),(0,n.kt)("p",null,"\u25b8 ",(0,n.kt)("strong",{parentName:"p"},"isL2Provider"),"<",(0,n.kt)("inlineCode",{parentName:"p"},"TProvider"),">","(",(0,n.kt)("inlineCode",{parentName:"p"},"provider"),"): provider is L2Provider<TProvider",">"),(0,n.kt)("p",null,"Determines if a given Provider is an L2Provider.  Will coerce type\nif true"),(0,n.kt)("h4",{id:"type-parameters-3"},"Type parameters"),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,n.kt)("th",{parentName:"tr",align:"left"},"Type"))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"left"},(0,n.kt)("inlineCode",{parentName:"td"},"TProvider")),(0,n.kt)("td",{parentName:"tr",align:"left"},"extends ",(0,n.kt)("inlineCode",{parentName:"td"},"Provider"))))),(0,n.kt)("h4",{id:"parameters-11"},"Parameters"),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,n.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,n.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"left"},(0,n.kt)("inlineCode",{parentName:"td"},"provider")),(0,n.kt)("td",{parentName:"tr",align:"left"},(0,n.kt)("inlineCode",{parentName:"td"},"TProvider")),(0,n.kt)("td",{parentName:"tr",align:"left"},"The provider to check")))),(0,n.kt)("h4",{id:"returns-11"},"Returns"),(0,n.kt)("p",null,"provider is L2Provider<TProvider",">"),(0,n.kt)("p",null,"Boolean"),(0,n.kt)("p",null,(0,n.kt)("strong",{parentName:"p"},(0,n.kt)("inlineCode",{parentName:"strong"},"Example"))),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-ts"},"if (isL2Provider(provider)) {\n  // typescript now knows it is of type L2Provider\n  const gasPrice = await provider.estimateL2GasPrice(tx)\n}\n")),(0,n.kt)("h4",{id:"defined-in-29"},"Defined in"),(0,n.kt)("p",null,(0,n.kt)("a",{parentName:"p",href:"https://github.com/morph-l2/sdk/tree/97c4394/src/l2-provider.ts#L154"},"src/l2-provider.ts:154")),(0,n.kt)("hr",null),(0,n.kt)("h3",{id:"migratedwithdrawalgaslimit"},"migratedWithdrawalGasLimit"),(0,n.kt)("p",null,"\u25b8 ",(0,n.kt)("strong",{parentName:"p"},"migratedWithdrawalGasLimit"),"(",(0,n.kt)("inlineCode",{parentName:"p"},"data"),", ",(0,n.kt)("inlineCode",{parentName:"p"},"chainID"),"): ",(0,n.kt)("inlineCode",{parentName:"p"},"BigNumber")),(0,n.kt)("p",null,"Compute the min gas limit for a migrated withdrawal."),(0,n.kt)("h4",{id:"parameters-12"},"Parameters"),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,n.kt)("th",{parentName:"tr",align:"left"},"Type"))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"left"},(0,n.kt)("inlineCode",{parentName:"td"},"data")),(0,n.kt)("td",{parentName:"tr",align:"left"},(0,n.kt)("inlineCode",{parentName:"td"},"string"))),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"left"},(0,n.kt)("inlineCode",{parentName:"td"},"chainID")),(0,n.kt)("td",{parentName:"tr",align:"left"},(0,n.kt)("inlineCode",{parentName:"td"},"number"))))),(0,n.kt)("h4",{id:"returns-12"},"Returns"),(0,n.kt)("p",null,(0,n.kt)("inlineCode",{parentName:"p"},"BigNumber")),(0,n.kt)("h4",{id:"defined-in-30"},"Defined in"),(0,n.kt)("p",null,(0,n.kt)("a",{parentName:"p",href:"https://github.com/morph-l2/sdk/tree/97c4394/src/utils/message-utils.ts#L53"},"src/utils/message-utils.ts:53")),(0,n.kt)("hr",null),(0,n.kt)("h3",{id:"omit"},"omit"),(0,n.kt)("p",null,"\u25b8 ",(0,n.kt)("strong",{parentName:"p"},"omit"),"<",(0,n.kt)("inlineCode",{parentName:"p"},"T"),", ",(0,n.kt)("inlineCode",{parentName:"p"},"K"),">","(",(0,n.kt)("inlineCode",{parentName:"p"},"obj"),", ",(0,n.kt)("inlineCode",{parentName:"p"},"...keys"),"): ",(0,n.kt)("inlineCode",{parentName:"p"},"Omit"),"<",(0,n.kt)("inlineCode",{parentName:"p"},"T"),", ",(0,n.kt)("inlineCode",{parentName:"p"},"K"),">"),(0,n.kt)("p",null,"Returns a copy of the given object ({ ...obj }) with the given keys omitted."),(0,n.kt)("h4",{id:"type-parameters-4"},"Type parameters"),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,n.kt)("th",{parentName:"tr",align:"left"},"Type"))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"left"},(0,n.kt)("inlineCode",{parentName:"td"},"T")),(0,n.kt)("td",{parentName:"tr",align:"left"},"extends ",(0,n.kt)("inlineCode",{parentName:"td"},"object"))),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"left"},(0,n.kt)("inlineCode",{parentName:"td"},"K")),(0,n.kt)("td",{parentName:"tr",align:"left"},"extends ",(0,n.kt)("inlineCode",{parentName:"td"},"string")," ","|"," ",(0,n.kt)("inlineCode",{parentName:"td"},"number")," ","|"," ",(0,n.kt)("inlineCode",{parentName:"td"},"symbol"))))),(0,n.kt)("h4",{id:"parameters-13"},"Parameters"),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,n.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,n.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"left"},(0,n.kt)("inlineCode",{parentName:"td"},"obj")),(0,n.kt)("td",{parentName:"tr",align:"left"},(0,n.kt)("inlineCode",{parentName:"td"},"T")),(0,n.kt)("td",{parentName:"tr",align:"left"},"Object to return with the keys omitted.")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"left"},(0,n.kt)("inlineCode",{parentName:"td"},"...keys")),(0,n.kt)("td",{parentName:"tr",align:"left"},(0,n.kt)("inlineCode",{parentName:"td"},"K"),"[]"),(0,n.kt)("td",{parentName:"tr",align:"left"},"Keys to omit from the returned object.")))),(0,n.kt)("h4",{id:"returns-13"},"Returns"),(0,n.kt)("p",null,(0,n.kt)("inlineCode",{parentName:"p"},"Omit"),"<",(0,n.kt)("inlineCode",{parentName:"p"},"T"),", ",(0,n.kt)("inlineCode",{parentName:"p"},"K"),">"),(0,n.kt)("p",null,"A copy of the given object with the given keys omitted."),(0,n.kt)("h4",{id:"defined-in-31"},"Defined in"),(0,n.kt)("p",null,(0,n.kt)("a",{parentName:"p",href:"https://github.com/morph-l2/sdk/tree/97c4394/src/utils/misc-utils.ts#L11"},"src/utils/misc-utils.ts:11")),(0,n.kt)("hr",null),(0,n.kt)("h3",{id:"toaddress"},"toAddress"),(0,n.kt)("p",null,"\u25b8 ",(0,n.kt)("strong",{parentName:"p"},"toAddress"),"(",(0,n.kt)("inlineCode",{parentName:"p"},"addr"),"): ",(0,n.kt)("inlineCode",{parentName:"p"},"string")),(0,n.kt)("p",null,"Converts an address-like into a 0x-prefixed address string."),(0,n.kt)("h4",{id:"parameters-14"},"Parameters"),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,n.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,n.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"left"},(0,n.kt)("inlineCode",{parentName:"td"},"addr")),(0,n.kt)("td",{parentName:"tr",align:"left"},(0,n.kt)("a",{parentName:"td",href:"modules#addresslike"},(0,n.kt)("inlineCode",{parentName:"a"},"AddressLike"))),(0,n.kt)("td",{parentName:"tr",align:"left"},"Address-like to convert into an address.")))),(0,n.kt)("h4",{id:"returns-14"},"Returns"),(0,n.kt)("p",null,(0,n.kt)("inlineCode",{parentName:"p"},"string")),(0,n.kt)("p",null,"Address-like as an address."),(0,n.kt)("h4",{id:"defined-in-32"},"Defined in"),(0,n.kt)("p",null,(0,n.kt)("a",{parentName:"p",href:"https://github.com/morph-l2/sdk/tree/97c4394/src/utils/coercion.ts#L104"},"src/utils/coercion.ts:104")),(0,n.kt)("hr",null),(0,n.kt)("h3",{id:"tobignumber"},"toBigNumber"),(0,n.kt)("p",null,"\u25b8 ",(0,n.kt)("strong",{parentName:"p"},"toBigNumber"),"(",(0,n.kt)("inlineCode",{parentName:"p"},"num"),"): ",(0,n.kt)("inlineCode",{parentName:"p"},"BigNumber")),(0,n.kt)("p",null,"Converts a number-like into an ethers BigNumber."),(0,n.kt)("h4",{id:"parameters-15"},"Parameters"),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,n.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,n.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"left"},(0,n.kt)("inlineCode",{parentName:"td"},"num")),(0,n.kt)("td",{parentName:"tr",align:"left"},(0,n.kt)("a",{parentName:"td",href:"modules#numberlike"},(0,n.kt)("inlineCode",{parentName:"a"},"NumberLike"))),(0,n.kt)("td",{parentName:"tr",align:"left"},"Number-like to convert into a BigNumber.")))),(0,n.kt)("h4",{id:"returns-15"},"Returns"),(0,n.kt)("p",null,(0,n.kt)("inlineCode",{parentName:"p"},"BigNumber")),(0,n.kt)("p",null,"Number-like as a BigNumber."),(0,n.kt)("h4",{id:"defined-in-33"},"Defined in"),(0,n.kt)("p",null,(0,n.kt)("a",{parentName:"p",href:"https://github.com/morph-l2/sdk/tree/97c4394/src/utils/coercion.ts#L84"},"src/utils/coercion.ts:84")),(0,n.kt)("hr",null),(0,n.kt)("h3",{id:"tonumber"},"toNumber"),(0,n.kt)("p",null,"\u25b8 ",(0,n.kt)("strong",{parentName:"p"},"toNumber"),"(",(0,n.kt)("inlineCode",{parentName:"p"},"num"),"): ",(0,n.kt)("inlineCode",{parentName:"p"},"number")),(0,n.kt)("p",null,"Converts a number-like into a number."),(0,n.kt)("h4",{id:"parameters-16"},"Parameters"),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,n.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,n.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"left"},(0,n.kt)("inlineCode",{parentName:"td"},"num")),(0,n.kt)("td",{parentName:"tr",align:"left"},(0,n.kt)("a",{parentName:"td",href:"modules#numberlike"},(0,n.kt)("inlineCode",{parentName:"a"},"NumberLike"))),(0,n.kt)("td",{parentName:"tr",align:"left"},"Number-like to convert into a number.")))),(0,n.kt)("h4",{id:"returns-16"},"Returns"),(0,n.kt)("p",null,(0,n.kt)("inlineCode",{parentName:"p"},"number")),(0,n.kt)("p",null,"Number-like as a number."),(0,n.kt)("h4",{id:"defined-in-34"},"Defined in"),(0,n.kt)("p",null,(0,n.kt)("a",{parentName:"p",href:"https://github.com/morph-l2/sdk/tree/97c4394/src/utils/coercion.ts#L94"},"src/utils/coercion.ts:94")),(0,n.kt)("hr",null),(0,n.kt)("h3",{id:"toprovider"},"toProvider"),(0,n.kt)("p",null,"\u25b8 ",(0,n.kt)("strong",{parentName:"p"},"toProvider"),"(",(0,n.kt)("inlineCode",{parentName:"p"},"provider"),"): ",(0,n.kt)("inlineCode",{parentName:"p"},"Provider")),(0,n.kt)("p",null,"Converts a ProviderLike into a Provider. Assumes that if the input is a string then it is a\nJSON-RPC url."),(0,n.kt)("h4",{id:"parameters-17"},"Parameters"),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,n.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,n.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"left"},(0,n.kt)("inlineCode",{parentName:"td"},"provider")),(0,n.kt)("td",{parentName:"tr",align:"left"},(0,n.kt)("a",{parentName:"td",href:"modules#providerlike"},(0,n.kt)("inlineCode",{parentName:"a"},"ProviderLike"))),(0,n.kt)("td",{parentName:"tr",align:"left"},"ProviderLike to turn into a Provider.")))),(0,n.kt)("h4",{id:"returns-17"},"Returns"),(0,n.kt)("p",null,(0,n.kt)("inlineCode",{parentName:"p"},"Provider")),(0,n.kt)("p",null,"Input as a Provider."),(0,n.kt)("h4",{id:"defined-in-35"},"Defined in"),(0,n.kt)("p",null,(0,n.kt)("a",{parentName:"p",href:"https://github.com/morph-l2/sdk/tree/97c4394/src/utils/coercion.ts#L46"},"src/utils/coercion.ts:46")),(0,n.kt)("hr",null),(0,n.kt)("h3",{id:"tosignerorprovider"},"toSignerOrProvider"),(0,n.kt)("p",null,"\u25b8 ",(0,n.kt)("strong",{parentName:"p"},"toSignerOrProvider"),"(",(0,n.kt)("inlineCode",{parentName:"p"},"signerOrProvider"),"): ",(0,n.kt)("inlineCode",{parentName:"p"},"Provider")," ","|"," ",(0,n.kt)("inlineCode",{parentName:"p"},"Signer")),(0,n.kt)("p",null,"Converts a SignerOrProviderLike into a Signer or a Provider. Assumes that if the input is a\nstring then it is a JSON-RPC url."),(0,n.kt)("h4",{id:"parameters-18"},"Parameters"),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,n.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,n.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"left"},(0,n.kt)("inlineCode",{parentName:"td"},"signerOrProvider")),(0,n.kt)("td",{parentName:"tr",align:"left"},(0,n.kt)("a",{parentName:"td",href:"modules#signerorproviderlike"},(0,n.kt)("inlineCode",{parentName:"a"},"SignerOrProviderLike"))),(0,n.kt)("td",{parentName:"tr",align:"left"},"SignerOrProviderLike to turn into a Signer or Provider.")))),(0,n.kt)("h4",{id:"returns-18"},"Returns"),(0,n.kt)("p",null,(0,n.kt)("inlineCode",{parentName:"p"},"Provider")," ","|"," ",(0,n.kt)("inlineCode",{parentName:"p"},"Signer")),(0,n.kt)("p",null,"Input as a Signer or Provider."),(0,n.kt)("h4",{id:"defined-in-36"},"Defined in"),(0,n.kt)("p",null,(0,n.kt)("a",{parentName:"p",href:"https://github.com/morph-l2/sdk/tree/97c4394/src/utils/coercion.ts#L25"},"src/utils/coercion.ts:25")),(0,n.kt)("hr",null),(0,n.kt)("h3",{id:"totransactionhash"},"toTransactionHash"),(0,n.kt)("p",null,"\u25b8 ",(0,n.kt)("strong",{parentName:"p"},"toTransactionHash"),"(",(0,n.kt)("inlineCode",{parentName:"p"},"transaction"),"): ",(0,n.kt)("inlineCode",{parentName:"p"},"string")),(0,n.kt)("p",null,"Pulls a transaction hash out of a TransactionLike object."),(0,n.kt)("h4",{id:"parameters-19"},"Parameters"),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,n.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,n.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"left"},(0,n.kt)("inlineCode",{parentName:"td"},"transaction")),(0,n.kt)("td",{parentName:"tr",align:"left"},(0,n.kt)("a",{parentName:"td",href:"modules#transactionlike"},(0,n.kt)("inlineCode",{parentName:"a"},"TransactionLike"))),(0,n.kt)("td",{parentName:"tr",align:"left"},"TransactionLike to convert into a transaction hash.")))),(0,n.kt)("h4",{id:"returns-19"},"Returns"),(0,n.kt)("p",null,(0,n.kt)("inlineCode",{parentName:"p"},"string")),(0,n.kt)("p",null,"Transaction hash corresponding to the TransactionLike input."),(0,n.kt)("h4",{id:"defined-in-37"},"Defined in"),(0,n.kt)("p",null,(0,n.kt)("a",{parentName:"p",href:"https://github.com/morph-l2/sdk/tree/97c4394/src/utils/coercion.ts#L62"},"src/utils/coercion.ts:62")))}m.isMDXComponent=!0}}]);